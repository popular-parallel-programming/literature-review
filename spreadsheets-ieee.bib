@INPROCEEDINGS{6103977,
  author =	 {Chang-shing Perng and Rong Chang and Tao Tao and So,
                  E. and Mihwa Choi and Shaikh, H.},
  booktitle =	 {Network and Service Management (CNSM), 2011 7th
                  International Conference on},
  title =	 {Universal economic analysis for IT transformation},
  year =	 2011,
  pages =	 {1-4},
  abstract =	 {For any IT transformation with significant
                  investment, economic analysis is essential for
                  justifying the risks and expenditures. Much cost
                  modeling has been done for various types of IT
                  transformations, each looks into the unique aspects
                  of the concerned domains. This paper takes a
                  different direction and proposes a general
                  methodology named UROI for quickly constructing
                  ROI/TCO models to be used in the field.},
  keywords =	 {DP industry;costing;economics;investment;risk
                  management;IT transformation;ROI models;TCO
                  models;UROI;cost
                  modeling;expenditures;investment;risks;universal
                  economic analysis;Analytical models;Biological
                  system modeling;Buildings;Cloud
                  computing;Economics;Mathematical model;Servers},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:08:02>},
}

@INPROCEEDINGS{1173080,
  author =	 {Mittermeir, R. and Clermont, M.},
  booktitle =	 {Reverse Engineering, 2002. Proceedings. Ninth
                  Working Conference on},
  title =	 {Finding high-level structures in spreadsheet
                  programs},
  year =	 2002,
  pages =	 {221-232},
  abstract =	 {Spreadsheets are a common tool in end-user
                  programming, but even while important decisions are
                  based on spreadsheet computations, spreadsheets are
                  poorly documented software and the differences
                  between simple one-shot computations and large,
                  long-living sheets are not well understood. Like
                  other software, production spreadsheets are subject
                  to repeated maintenance cycles. Consequently, as
                  with conventional software, short maintenance cycles
                  and poor documentation tend to decrease their
                  quality. We introduce an approach to help
                  maintainers understand the structure of large
                  spreadsheets as well as to zoom into certain parts
                  of the spreadsheet. To cope with large sheets, our
                  approach features two levels of abstraction: logical
                  areas and semantic classes. These abstractions are
                  based on different degrees of relatedness of cells
                  according to the formulas they contain.},
  keywords =	 {software maintenance;spreadsheet
                  programs;abstraction;cell relatedness;end-user
                  programming;formulas;high-level structure
                  finding;logical areas;quality;repeated maintenance
                  cycles;semantic classes;spreadsheet
                  programs;Application software;Computer
                  industry;Computer
                  languages;Documentation;Microcomputers;Production;Prototypes;Software
                  engineering;Software maintenance;Spreadsheet
                  programs},
  doi =		 {10.1109/WCRE.2002.1173080},
  ISSN =	 {1095-1350},
  review = 	 {fbie: accepted <2016-01-15 15:08:05>},
}

@INPROCEEDINGS{885069,
  author =	 {Rasmequan, S. and Russ, S.},
  booktitle =	 {Systems, Man, and Cybernetics, 2000 IEEE
                  International Conference on},
  title =	 {Cognitive artefacts for decision support},
  year =	 2000,
  volume =	 1,
  pages =	 {651-656 vol.1},
  abstract =	 {We introduce a novel approach to computer-based
                  modelling which allows the construction of cognitive
                  artefacts with an unusual degree of openness and a
                  potential for close integration with other artefacts
                  and with human processes. Four particular artefacts
                  concerning railway operation, timetabling,
                  restaurant management and warehouse management are
                  described briefly and attention is drawn to those
                  properties concerning knowledge representation and
                  communication which show that the modelling methods
                  used have a significant contribution to make the
                  development of more effective decision support
                  systems in a business context},
  keywords =	 {business data processing;decision support
                  systems;knowledge representation;business;cognitive
                  artefacts;computer-based modelling;decision support
                  systems;human processes;knowledge
                  representation;railway operation;restaurant
                  management;timetabling;warehouse management;Business
                  communication;Computer science;Context
                  modeling;Decision support systems;Electronic
                  switching systems;Humans;Knowledge
                  management;Knowledge representation;Mathematical
                  model;Rail transportation},
  doi =		 {10.1109/ICSMC.2000.885069},
  ISSN =	 {1062-922X},
  review = 	 {fbie: rejected <2016-01-15 15:08:07>},
}

@INPROCEEDINGS{495416,
  author =	 {Panko, R.R. and Halverson, R.P., Jr.},
  booktitle =	 {System Sciences, 1996., Proceedings of the
                  Twenty-Ninth Hawaii International Conference on ,},
  title =	 {Spreadsheets on trial: a survey of research on
                  spreadsheet risks},
  year =	 1996,
  volume =	 2,
  pages =	 {326-335 vol.2},
  abstract =	 {Even the earliest writers in end user computing
                  remarked on the potential dangers of end user
                  spreadsheet development. Until recently, there was
                  only anecdotal evidence to support their
                  concerns. Now, there is considerable evidence from
                  experiments, field audits, and surveys of end users
                  and organizations that early concerns were
                  well-founded. The paper presents a framework for
                  risks in spreadsheeting and organizes selected
                  research findings in terms of this framework},
  keywords =	 {administrative data processing;errors;office
                  automation;personal computing;reviews;risk
                  management;software engineering;spreadsheet
                  programs;systems analysis;end user computing;end
                  user spreadsheet development;experiments;field
                  audits;spreadsheet
                  risks;surveys;Books;Costs;Debugging;Degradation;Error
                  analysis;Error
                  correction;Laboratories;Logic;Taxonomy},
  doi =		 {10.1109/HICSS.1996.495416},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:08:11>},
}

@INPROCEEDINGS{6595270,
  author =	 {Chimalakonda, S. and Nori, K.V.},
  booktitle =	 {Software Engineering Education and Training (CSEE
                  T), 2013 IEEE 26th Conference on},
  title =	 {What makes it hard to teach software engineering to
                  end users? some directions from adaptive and
                  personalized learning},
  year =	 2013,
  pages =	 {324-328},
  abstract =	 {Today, software is being co-designed, co-developed,
                  co-maintained and customized by professionals from a
                  wide range of other disciplines and end users from
                  varied and different backgrounds in addition to
                  software engineers. While there is extensive
                  research on facilitating and supporting end users to
                  write better software, there is sparse research on
                  better ways of educating them with software
                  engineering (SE) knowledge. On the other hand,
                  learning domain has recognized the need for adaptive
                  and personalized learning (APL) and developed
                  numerous approaches, methods and tools to address
                  that need. The main purpose of this paper is firstly
                  to expose some challenges of teaching SE to end
                  users with an aim of understanding learning needs of
                  end users. We then present a brief overview of APL
                  domain and an ontology based framework for
                  integrating APL with software engineering education
                  (SEE). We then discuss a brief example of end users
                  from adult literacy followed by some future
                  directions towards delivering personalized SEE.},
  keywords =	 {computer science education;ontologies (artificial
                  intelligence);software engineering;teaching;APL;SE
                  knowledge;SEE;adaptive-and-personalized
                  learning;learning need;ontology based
                  framework;software codesign;software
                  codevelopment;software comaintenance;software
                  customization;software engineering
                  education;software engineering knowledge;software
                  engineering
                  teaching;Conferences;Education;Ontologies;Programming
                  profession;Software;Software engineering},
  doi =		 {10.1109/CSEET.2013.6595270},
  ISSN =	 {1093-0175},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:08:14>},
}

@INPROCEEDINGS{661583,
  author =	 {Teo, T.S.H. and Tan, M.},
  booktitle =	 {System Sciences, 1997, Proceedings of the Thirtieth
                  Hawaii International Conference on},
  title =	 {Quantitative and qualitative errors in spreadsheet
                  development},
  year =	 1997,
  volume =	 3,
  pages =	 {149-155 vol.3},
  abstract =	 {Past research has shown that errors are relatively
                  common in all types of spreadsheets. As spreadsheets
                  are used widely by executives in analyzing
                  financial, budgeting and forecasting problems to
                  support their decision making, it is very important
                  that spreadsheets are accurate. Errors undetected in
                  spreadsheets may have undesirable consequences, as
                  they may adversely impact the firm's bottom line as
                  well as the firm's competitiveness. In this paper,
                  we investigate the types of errors that occur for a
                  simple domain-free spreadsheet model. We also show
                  that spreadsheet errors can be difficult to detect
                  during “what-if” analysis (i.e. when design
                  parameters are changed) when the spreadsheets are
                  not properly designed. The results show that most
                  students do not take due care in designing their
                  spreadsheets. The study appears to suggest that in
                  teaching spreadsheets, emphasis must be placed on
                  creating a comprehensible design that enables easy
                  detection of errors and easy maintenance},
  keywords =	 {computer literacy;error detection;program
                  debugging;software maintenance;spreadsheet
                  programs;teaching;accuracy;budgeting
                  problems;competitiveness;comprehensible
                  design;decision making;design parameters;domain-free
                  spreadsheet model;error detection;financial
                  problems;forecasting problems;qualitative
                  errors;quantitative errors;spreadsheet
                  development;spreadsheet
                  maintenance;students;teaching;what-if
                  analysis;Analytical models;Application
                  software;Computer applications;Computer
                  errors;Debugging;Decision making;Education;Error
                  analysis;Testing},
  doi =		 {10.1109/HICSS.1997.661583},
  ISSN =	 {1060-3425},
  month =	 {Jan},
  review = 	 {fbie: accepted <2016-01-15 15:08:20>},
}

@INPROCEEDINGS{5765230,
  author =	 {Wu, B.H.},
  booktitle =	 {Information Science and Technology (ICIST), 2011
                  International Conference on},
  title =	 {On software engineering and software methodologies a
                  software developer's perspective},
  year =	 2011,
  pages =	 {155-162},
  abstract =	 {In this survey paper, the terms software engineering
                  and software methodologies are studied through
                  tracing the recent IEEE's International Conference
                  in Software Engineering from 2006 on and IEEE
                  Software magazine articles including its 25th
                  anniversary recommendation of 35 top-pick articles
                  listed in Jan/Feb 2009 issue. The question
                  stipulated throughout the paper is the following: is
                  software engineering a true engineering discipline?
                  Mary Shaw brought up this question in her top-pick
                  article in Software's December 1990 issue where she
                  wrote, “Software engineering is not yet a true
                  engineering discipline, but it has the potential to
                  become one. Older engineering fields suggest the
                  character software engineering might have.” By
                  surveying progresses made in software engineering
                  over the last four decades, the paper considers the
                  questions: who are the constituents in the software
                  engineering profession? And what software
                  methodologies do software engineers apply in our
                  professional work? By presenting the current state
                  of software and its development, the paper concludes
                  with a future of software engineering where we-the
                  software development professionals- may go from
                  here.},
  keywords =	 {software engineering;IEEE international
                  conference;IEEE software magazine;professional
                  work;software engineering;software
                  methodologies;Load modeling;Production;Software},
  doi =		 {10.1109/ICIST.2011.5765230},
  month =	 {March},
  review = 	 {fbie: rejected <2016-01-15 15:08:23>},
}

@INPROCEEDINGS{4351356,
  author =	 {Pane, J.F. and Rosson, M.B.},
  booktitle =	 {Visual Languages and Human-Centric Computing,
                  2007. VL/HCC 2007. IEEE Symposium on},
  title =	 {Broadening the Audience for Computational
                  Thinking:Graduate Student Consortium},
  year =	 2007,
  pages =	 {249-249},
  abstract =	 {The fifth annual graduate consortium at VL/HCC
                  addresses the question: How can researchers and
                  designers of end-user development environments
                  better address the needs of an increasingly diverse
                  population?},
  keywords =	 {computer aided instruction;computational
                  thinking;information
                  literacy;Conferences;Engineering
                  profession;Feedback;Home computing;Information
                  systems;Information
                  technology;Problem-solving;Programming;Software;Usability},
  doi =		 {10.1109/VLHCC.2007.47},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:08:25>},
}

@INPROCEEDINGS{1372309,
  author =	 {Rosson, M.B. and Ballin, J. and Nash, H.},
  booktitle =	 {Visual Languages and Human Centric Computing, 2004
                  IEEE Symposium on},
  title =	 {Everyday Programming: Challenges and Opportunities
                  for Informal Web Development},
  year =	 2004,
  pages =	 {123-130},
  abstract =	 {Semistructured interviews were conducted with twelve
                  end users who develop and maintain Web content for
                  diverse organizations. We discussed their general
                  background and Web projects, with an emphasis on
                  tool usage and problem-solving strategies. Our
                  qualitative analysis of the interview results offers
                  a socio-technical view of everyday programming, with
                  an emphasis on the complex interactions between
                  end-users' personal history, organizational context,
                  and tool use},
  keywords =	 {Internet;Web design;Web content;Web development;Web
                  projects;end users;organizational context;personal
                  history;problem-solving
                  strategy;programming;socio-technical view;tool
                  usage;Collaborative tools;Educational
                  technology;History;Minutes;Problem-solving;Programming
                  profession;Resists;Software maintenance;Web
                  pages;Web sites},
  doi =		 {10.1109/VLHCC.2004.26},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:08:28>},
}

@INPROCEEDINGS{5641950,
  author =	 {Sousa, J.P. and Tzeremes, V. and El Masri, A.},
  booktitle =	 {Systems Man and Cybernetics (SMC), 2010 IEEE
                  International Conference on},
  title =	 {Space-aware TeC: End-user development of safety and
                  control systems for smart spaces},
  year =	 2010,
  pages =	 {2914-2921},
  abstract =	 {This paper presents team computing, TeC, a framework
                  for end-user design, deployment, and evolution of
                  applications for ubiquitous computing. Systems in
                  TeC act as teams of elements with no central
                  control: elements play their roles autonomously, and
                  system behavior is emergent. The paper presents five
                  small but illustrative systems in the domains of
                  home automation, energy management, and
                  surveillance. TeC's features include the ability to
                  relate, at the design level, system behaviors to
                  physical location and to the presence and identity
                  of users. TeC also allows for the secure integration
                  of parts of design contributed by different
                  users. The paper discusses the implementation of a
                  software infrastructure for the design and automated
                  deployment of systems.},
  keywords =	 {energy management systems;home automation;personal
                  computing;software
                  architecture;surveillance;ubiquitous
                  computing;automated system deployment;control
                  system;end user development;energy management;home
                  automation;illustrative system;physical
                  location;smart space;software infrastructure;space
                  aware TeC;surveillance;system behavior;team
                  computing;ubiquitous
                  computing;Films;Monitoring;design
                  methodology;end-user development;home
                  automation;smart buildings;ubiquitous computing},
  doi =		 {10.1109/ICSMC.2010.5641950},
  ISSN =	 {1062-922X},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:08:30>},
}

@INPROCEEDINGS{6070375,
  author =	 {Cao, J. and Fleming, S.D. and Burnett, M.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2011 IEEE Symposium on},
  title =	 {An exploration of design opportunities for
                  #x201C;gardening #x201D; end-user programmers'
                  ideas},
  year =	 2011,
  pages =	 {35-42},
  abstract =	 {Despite recent advances in supporting end-user
                  programmers, empirical studies continue to report
                  barriers that end users experience in problem
                  solving with programming environments. We
                  hypothesize that an important barrier that still
                  needs to be overcome is the lack of support for
                  nurturing end-user programmers' ideas on how a
                  program should be written or on how to solve
                  programming difficulties. Therefore, in this paper,
                  we present a qualitative empirical investigation and
                  triangulate the results with theories from problem
                  solving and creativity. Moreover, we explore design
                  opportunities and a design space for “idea
                  gardening”, a new approach to nurturing end-user
                  programmers' ideas and to helping them gradually
                  gain expertise as they overcome barriers. Our
                  results suggest that nurturing end-user programmers'
                  ideas is a fertile area for research with an
                  interesting, multidimensional design space.},
  keywords =	 {programming;software engineering;design
                  opportunity;end-user programmer idea;programming
                  environment;Educational
                  institutions;Google;Mashups;Problem-solving;Programming
                  environments;Programming
                  profession;creativity;end-user programming;end-user
                  software engineering;mashups;problem solving},
  doi =		 {10.1109/VLHCC.2011.6070375},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:08:41>},
}

@INPROCEEDINGS{495417,
  author =	 {Galletta, D.F. and Hartzel, K.S. and Johnson, S. and
                  Joseph, J. and Rustagi, S.},
  booktitle =	 {System Sciences, 1996., Proceedings of the
                  Twenty-Ninth Hawaii International Conference on ,},
  title =	 {An experimental study of spreadsheet presentation
                  and error detection},
  year =	 1996,
  volume =	 2,
  pages =	 {336-345 vol.2},
  abstract =	 {Several well-founded concerns exist about the
                  integrity and validity of electronic
                  spreadsheets. One hundred thirteen MBA students
                  sought eight errors planted in a single-page
                  spreadsheet to discover if differences in the
                  presentation format would facilitate error-finding
                  performance. Five presentation formats were
                  used. Spreadsheets were presented on the screen,
                  both with and without formulas. Spreadsheets were
                  also presented on paper with a list of formulas
                  attached or without formulas. A new integrated
                  formula paper treatment was introduced with formulas
                  presented in each cell directly under each
                  calculated value. Subjects found, on average, only
                  about 50% of the errors across all presentation
                  formats. The on-screen treatments were clearly
                  inferior to the paper treatments, whether or not
                  formulas were presented. Practitioners should be
                  aware of the difficulties in finding even simple
                  errors, especially on-screen, and should develop
                  training programs to facilitate spreadsheet
                  auditors' performance},
  keywords =	 {accounts data processing;auditing;data
                  integrity;errors;financial data
                  processing;spreadsheet programs;system
                  monitoring;training;MBA students;calculated
                  value;electronic spreadsheets;error-finding
                  performance;formulas;integrated formula paper
                  treatment;on-screen treatment;paper
                  treatment;presentation format;single-page
                  spreadsheet;spreadsheet auditor
                  performance;spreadsheet error detection;spreadsheet
                  integrity;spreadsheet presentation;spreadsheet
                  validity;training programs;Computer errors;Computer
                  languages;Decision making;Environmental
                  economics;Face detection;Laboratories},
  doi =		 {10.1109/HICSS.1996.495417},
  month =	 {Jan},
  review = 	 {fbie: accepted <2016-01-15 15:08:47>},
}

@INPROCEEDINGS{495418,
  author =	 {Janvrin, D. and Morrison, J.},
  booktitle =	 {System Sciences, 1996., Proceedings of the
                  Twenty-Ninth Hawaii International Conference on ,},
  title =	 {Factors influencing risks and outcomes in end-user
                  development},
  year =	 1996,
  volume =	 2,
  pages =	 {346-355 vol.2},
  abstract =	 {End-user developed applications introduce many
                  control risks into organizations. Literature
                  suggests that influencing factors include developer
                  experience, design approach, application type,
                  problem complexity, time pressure, and presence or
                  absence of review procedures. The research explores
                  the impacts of different design approaches through
                  two field experiments evaluating the use versus
                  non-use of a structured design methodology when
                  developing complex spreadsheets. Our results
                  indicated that subjects using the methodology showed
                  a significant reduction in the number of “linking
                  errors”, i.e., mistakes in creating links between
                  values that must flow from one area of the
                  spreadsheet to another or from one worksheet to
                  another in a common workbook. We also observed that
                  factors such as gender, application expertise, and
                  workgroup configuration influenced spreadsheet error
                  rates as well},
  keywords =	 {errors;financial data processing;gender issues;human
                  factors;risk management;software
                  engineering;spreadsheet programs;structured
                  programming;system monitoring;application
                  expertise;application type;common workbook;complex
                  spreadsheet development;control risks;design
                  approach;developer experience;end-user developed
                  applications;end-user development outcomes;end-user
                  development risks;gender;link creation
                  mistakes;linking errors;organizations;problem
                  complexity;review procedures;spreadsheet error
                  rates;structured design methodology;time
                  pressure;workgroup configuration;Application
                  software;Area measurement;Cities and towns;Computer
                  applications;Computer errors;Control system
                  synthesis;Costing;Design methodology;Error
                  analysis;Information systems},
  doi =		 {10.1109/HICSS.1996.495418},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:08:49>},
}

@INPROCEEDINGS{1260198,
  booktitle =	 {Human Centric Computing Languages and Environments,
                  2003. Proceedings. 2003 IEEE Symposium on},
  title =	 {Programming at runtime: Requirements paradigms for
                  nonprogrammer web application development},
  year =	 2003,
  pages =	 {23-30},
  abstract =	 {We investigate the femibiliy of nonprogramnier web
                  application development and propose the creation of
                  end-user programming tools that address the issue at
                  a high level of abstraction. The results of three
                  related empirical studies and one protoping effort
                  are reported. We surveyed nonprogrammersÂ¿ needs for
                  web applications and studied how nonprogrammers
                  would naturally approach web development. To express
                  what a tool should provide we summarize high-level
                  components and concepts employed by web
                  applications. To express how a tool may provide its
                  functionality, we propose "Programming-at-Runtime" -
                  a programming paradigm that is in its core similar
                  to the automatic recalculation in
                  spreadsheets. Finally, we introduce "FlashLight" - a
                  protoype web development tool for nonprogrammers.},
  keywords =	 {formal specification;high level languages;multimedia
                  computing;software engineering;visual
                  programming;domain-specific
                  programming;educationally disadvantage
                  programming;end-user programming;formal
                  methods;human centric computing languages;multimedia
                  languages;multimedia software engineering;visual
                  languages;visual software engineering;Automatic
                  programming;Functional programming;HTML;Power
                  engineering and energy;Power system
                  economics;Programming
                  profession;Publishing;Reliability
                  engineering;Runtime;World Wide Web},
  doi =		 {10.1109/HCC.2003.1260198},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:08:52>},
}

@INPROCEEDINGS{6344472,
  author =	 {Dinmore, M.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2012 IEEE Symposium on},
  title =	 {Design and evaluation of a literate spreadsheet},
  year =	 2012,
  pages =	 {15-18},
  abstract =	 {Support for capturing and sharing the
                  problem-solving knowledge associated with
                  end-user-developed software is often lacking. The
                  principles behind literate programming have been
                  proposed as an approach to addressing this. To study
                  the potential efficacy of these principles in the
                  general end-user programming case, they were applied
                  to spreadsheets, the most common end-user
                  programming environment, to produce a literate
                  spreadsheet design. The resulting artifact was then
                  evaluated through a user study with a focus on the
                  literate design's effect on user comprehension and
                  modification performance in each of the data,
                  formula and dependency layers of the spreadsheet
                  model. Significant performance improvements were
                  observed in the formula and dependency layers over
                  the traditional spreadsheet design, suggesting that
                  the literate form can help improve end-user
                  problem-solving knowledge reuse.},
  keywords =	 {personal computing;problem solving;programming
                  environments;software reusability;spreadsheet
                  programs;end-user problem-solving knowledge
                  reuse;end-user programming
                  environment;end-user-developed software;literate
                  programming;literate spreadsheet design;modification
                  performance;spreadsheet model;user
                  comprehension;Documentation;Humans;Information
                  systems;Problem-solving;Programming
                  profession;Software;Spreadsheet programs;empirical
                  studies;end-user programming;literate programming},
  doi =		 {10.1109/VLHCC.2012.6344472},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: accepted <2016-01-15 15:08:59>},
}

@INPROCEEDINGS{4783958,
  author =	 {Ginige, A.},
  booktitle =	 {Information and Automation for Sustainability,
                  2008. ICIAFS 2008. 4th International Conference on},
  title =	 {A Roadmap, Methodology and Technology Framework to
                  support eTransformation},
  year =	 2008,
  pages =	 {469-474},
  abstract =	 {Organisations are increasing their reliance on
                  information and communication technology to make
                  their business processes more efficient and
                  effective, transforming them into
                  eOrganisations. Our research has shown that this
                  eTransformation is an ongoing process with multiple
                  stages and dimensions, and cannot be approached as a
                  one-off project. In its early stages, business
                  reasons heavily influence the types of information
                  systems deployed in the organisation. The
                  implemented information systems then impact how
                  other business processes can be automated; sometimes
                  limiting what can be achieved. Thus, it is essential
                  to have a roadmap highlighting future requirements
                  when embarking on the process to eTransform an
                  organisation. Furthermore there is also the need to
                  follow a methodology. Our research has shown that
                  there is a strong interplay among technology,
                  processes and people, with a change in one leading
                  to subsequent changes in the others. This gives
                  raise to a process of co-evolution. Thus it is
                  important to understand the dynamics of
                  eTransformation and the need to have information
                  systems that can support co-evolution. To facilitate
                  the eTransformation of organisations we have now
                  developed an eTransformation roadmap, a methodology
                  and a technology framework to develop the required
                  information systems to support the evolving business
                  processes in an organisation.},
  keywords =	 {business data processing;information
                  systems;organisational aspects;business
                  processes;eOrganisations;eTransformation
                  roadmap;information and communication
                  technology;information systems;Australia;Business
                  communication;Communications technology;Consumer
                  electronics;Delay;Electronic
                  learning;Globalization;Government;Information
                  processing;Information systems},
  doi =		 {10.1109/ICIAFS.2008.4783958},
  month =	 {Dec},
  review = 	 {fbie: rejected <2016-01-15 15:09:00>},
}

@INPROCEEDINGS{6617338,
  author =	 {Aghaee, S. and Pautasso, C.},
  booktitle =	 {Live Programming (LIVE), 2013 1st International
                  Workshop on},
  title =	 {Live mashup tools: Challenges and opportunities},
  year =	 2013,
  pages =	 {1-4},
  abstract =	 {Live programming is a programming style in which the
                  repetitive task of compiling and running the
                  software being programmed is managed
                  automatically. This style can be a helpful practice
                  in End-User Development (EUD) where the
                  nonprofessional end-users are to be supported
                  through techniques and tools that empower them to
                  create or modify software artifacts. Mashups a form
                  of lightweight Web applications composing reusable
                  content and functionalities available on the Web are
                  a popular target for EUD activities on the Web. EUD
                  for mashups is enabled by intuitive composition
                  environments, called mashup tools. In this paper, we
                  introduce live mashup tools, a new class of mashup
                  tools based on the live programming style. We give a
                  comprehensive definition and classification of live
                  mashup tools, giving examples of how well existing
                  tools fit in this category and discuss open research
                  challenges and opportunities.},
  keywords =	 {Internet;automatic programming;user interface
                  management systems;EUD;end user
                  development;lightweight Web applications;live mashup
                  tools;live programming;nonprofessional end
                  users;programming style;repetitive task;software
                  artifacts;Mashups;Programming profession;User
                  interfaces;Visualization;End-User Development;Live
                  Programming;Liveness;Mashup Tools;Web Mashups},
  doi =		 {10.1109/LIVE.2013.6617338},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:09:01>},
}

@INPROCEEDINGS{6149451,
  author =	 {Panko, R.R. and Port, D.N.},
  booktitle =	 {System Science (HICSS), 2012 45th Hawaii
                  International Conference on},
  title =	 {End User Computing: The Dark Matter (and Dark
                  Energy) of Corporate IT},
  year =	 2012,
  pages =	 {4603-4612},
  abstract =	 {End user computing (EUC) applications are like dark
                  matter in physics. They are enormous in quantity and
                  importance yet have been largely invisible to
                  corporate IT departments, information systems
                  researchers, and corporate management. EUC
                  applications, especially spreadsheet applications,
                  are also "dark" in the sense that they pose a number
                  of overlooked risks for organizations, including
                  errors, privacy violations, trade secret extrusions,
                  and compliance violations. On the positive side, EUC
                  applications are also like the dark energy of
                  physics. They are bringing critical gains to
                  decision making, operational systems, and other
                  important processes to every corner of the firm. It
                  is time to stop ignoring end user computing in
                  general and spreadsheets in particular. One point to
                  consider in particular is that we should only talk
                  about development, regardless of whether the
                  developer user a 3GL or 4GL.},
  keywords =	 {data privacy;decision making;organisational
                  aspects;personal information systems;risk
                  management;EUC applications;compliance
                  violations;corporate IT departments;corporate
                  management;decision making;end user
                  computing;information system researchers;operational
                  system;organization risks;privacy
                  violations;spreadsheet applications;trade secret
                  extrusion;Companies;Dark energy;Educational
                  institutions;Productivity;Programming;Spreadsheet
                  programs;End User Computing;Error;Spreadsheet},
  doi =		 {10.1109/HICSS.2012.244},
  ISSN =	 {1530-1605},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:09:06>},
}

@INPROCEEDINGS{6344483,
  author =	 {Cao, J. and Kwan, I. and White, R. and Fleming,
                  S.D. and Burnett, M. and Scaffidi, C.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2012 IEEE Symposium on},
  title =	 {From barriers to learning in the idea garden: An
                  empirical study},
  year =	 2012,
  pages =	 {59-66},
  abstract =	 {How can end-user programming environments better
                  help their users overcome programming barriers? We
                  have been investigating an approach called Idea
                  Gardening, which addresses this problem by helping
                  end users to help themselves overcome barriers in
                  the context of “doing”. In this paper, we report on
                  a qualitative empirical study of how effectively an
                  Idea Garden prototype helped end users overcome
                  programming barriers in the CoScripter environment,
                  and the extent to which participants learned after
                  interacting with our features. Our results showed
                  that 9 out of 10 participants who encountered
                  barriers and then used the Idea Garden, overcame
                  their barriers. Further, all 9 went on to
                  demonstrate evidence of having learned the
                  programming concepts, patterns, and strategies
                  relevant to overcoming these barriers.},
  keywords =	 {learning (artificial
                  intelligence);programming;prototypes;CoScripter
                  environment;Idea Garden prototype;Idea
                  Gardening;end-user programming environments;learning
                  barriers;programming barriers;programming
                  concepts;programming
                  patterns;Calculators;Context;Educational
                  institutions;Problem-solving;Programming;Tutorials;Web
                  pages;Idea Garden;end-user programming;learning},
  doi =		 {10.1109/VLHCC.2012.6344483},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:09:18>},
}

@INPROCEEDINGS{6427135,
  author =	 {Barcelos, T.S. and Silveira, I.F.},
  booktitle =	 {Informatica (CLEI), 2012 XXXVIII Conferencia
                  Latinoamericana En},
  title =	 {Teaching Computational Thinking in initial series An
                  analysis of the confluence among mathematics and
                  Computer Sciences in elementary education and its
                  implications for higher education},
  year =	 2012,
  pages =	 {1-8},
  abstract =	 {The pervasiveness of computer devices in everyday
                  situations poses a fundamental question about
                  Computer Sciences as being part of those known as
                  basic sciences. However, it would be more beneficial
                  not to consider computation only as a technique, but
                  instead as a way of reasoning and problem
                  solving. Under this perspective, there are inherent
                  relationships among the knowledge, skills and
                  attitudes that emanate from this field and those
                  ones commonly related to Math. This paper discusses
                  the relationship between the so-named Computational
                  Thinking and the foundations of Math Education,
                  based on a literature review. Three groups of skills
                  that can be jointly developed by both areas are
                  identified and some challenges and implications for
                  education in Computer Sciences are discussed.},
  keywords =	 {computer science education;inference
                  mechanisms;mathematics computing;problem
                  solving;ubiquitous computing;Math
                  education;computational thinking teaching;computer
                  device pervasiveness;computer
                  science;education;problem
                  solving;reasoning;Cognition;Computational
                  modeling;Computers;Educational
                  institutions;Games;Mathematics;Computational
                  thinking;Mathematics;didactic strategies},
  doi =		 {10.1109/CLEI.2012.6427135},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:09:23>},
}

@INPROCEEDINGS{6883023,
  author =	 {Lee, M.J. and Bahmani, F. and Kwan, I. and LaFerte,
                  J. and Charters, P. and Horvath, A. and Luor, F. and
                  Cao, J. and Law, C. and Beswetherick, M. and Long,
                  S. and Burnett, M. and Ko, A.J.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2014 IEEE Symposium on},
  title =	 {Principles of a debugging-first puzzle game for
                  computing education},
  year =	 2014,
  pages =	 {57-64},
  abstract =	 {Although there are many systems designed to engage
                  people in programming, few explicitly teach the
                  subject, expecting learners to acquire the necessary
                  skills on their own as they create programs from
                  scratch. We present a principled approach to teach
                  programming using a debugging game called Gidget,
                  which was created using a unique set of seven design
                  principles. A total of 44 teens played it via a lab
                  study and two summer camps. Principle by principle,
                  the results revealed strengths, problems, and open
                  questions for the seven principles. Taken together,
                  the results were very encouraging: learners were
                  able to program with conditionals, loops, and other
                  programming concepts after using the game for just 5
                  hours.},
  keywords =	 {computer games;computer science education;program
                  debugging;teaching;Gidget;computing
                  education;conditional concept;debugging-first puzzle
                  game;loops concept;programming concepts;programming
                  teaching;Computers;Debugging;Educational
                  institutions;Games;Programming profession;Computer
                  science education;computational
                  thinking;debugging;educational game;summer camp;user
                  study},
  doi =		 {10.1109/VLHCC.2014.6883023},
  month =	 {July},
  review = 	 {fbie: rejected <2016-01-15 15:09:33>},
}

@BOOK{7055971,
  author =	 {Blomberg, J. and Darrah, C.},
  booktitle =	 {An Anthropology of Services:Toward a Practice
                  Approach to Designing Services},
  title =	 {An Anthropology of Services:Toward a Practice
                  Approach to Designing Services},
  year =	 2015,
  pages =	 115,
  abstract =	 {This book explores the possibility for an
                  anthropology of services and outlines a practice
                  approach to designing services. The reader is taken
                  on a journey that Blomberg and Darrah have been on
                  for the better part of a decade from their
                  respective positions helping to establish a services
                  research group within a large global enterprise and
                  an applied anthropology master's program at a
                  Silicon Valley university. They delve into the world
                  of services to understand both how services are
                  being conceptualized today and the possible benefits
                  that might result from taking an anthropological
                  view on services and their design. The authors argue
                  that the anthropological gaze can be useful
                  precisely because it combines attention to details
                  of everyday life with consideration of the larger
                  milieu in which those details make
                  sense. Furthermore, it asks us to reflect upon and
                  assess our own perspectives on that which we hope to
                  understand and change. Central to their exploration
                  is the question of how to conceptualize and engage
                  with the world of services given their
                  heterogeneity, the increasing global importance of
                  the service economy, and the possibilities
                  introduced for an engaged scholarship on service
                  design. While discourse on services and service
                  design can imply something distinctively new, the
                  authors point to parallels with what is known about
                  how humans have engaged with each other and the
                  material world over millennia. Establishing the
                  ubiquity of services as a starting point, the
                  authors go on to consider the limits of design when
                  the boundaries and connections between what can be
                  designed and what can only be performed are complex
                  and deeply mediated. In this regard the authors
                  outline a practice approach to designing that
                  acknowledges that designing involves participating
                  in a social context, that design and use occur in
                  concert, that people populate a world that has been
                  largely built by and with others, and that formal
                  models of services are impoverished repre entations
                  of human performance. An Anthropology of Services
                  draws attention to the conceptual and methodological
                  messiness of service worlds while providing the
                  reader with strategies for intervening in these
                  worlds for human betterment as complex and
                  challenging as that may be.},
  doi =		 {10.2200/S00628ED1V01Y201502HCI026},
  publisher =	 {Morgan & Claypool},
  isbn =	 9781608452026,
  url =
                  {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7055971},
  review = 	 {fbie: rejected <2016-01-15 15:09:35>},
}

@ARTICLE{7122917,
  author =	 {Francese, R. and Risi, M. and Tortora, G. and Tucci,
                  M.},
  journal =	 {Mobile Computing, IEEE Transactions on},
  title =	 {Visual Mobile Computing for Mobile End-Users},
  year =	 2015,
  volume =	 {PP},
  number =	 99,
  pages =	 {1-1},
  abstract =	 {We present an approach to enable end-users to
                  graphically compose their own applications directly
                  on their mobile phone, mainly integrating the
                  functionalities available on the device and those
                  provided by pervasive and Internet services. To this
                  aim, we propose a methodology and a graphical
                  notation enabling the user to compose mobile
                  applications, named MicroApps: the user creates an
                  application following an incremental and iterative
                  development process; he composes icons representing
                  (pervasive) services mainly by touch-based selection
                  and following a data-flow approach. He is not in
                  charge of the creation of the user interface, which
                  is automatically generated. The methodology enables
                  the end-user to develop applications and/or compose
                  services on the smartphone, so paving the way
                  towards new scenarios where smartphones replace and
                  overtake the Personal Computer, given their native
                  possibility of wide connectivity, when augmented by
                  features for interaction with remote systems and
                  sensors. The methodology has been evaluated through
                  an empirical analysis that revealed that in spite of
                  the reduced size of the screen the use of the
                  MicroApp Generator tool improves the effectiveness
                  in terms of time and editing errors with respect to
                  the use of MIT App Inventor [1].},
  keywords =	 {Context;Electronic mail;Engines;Generators;Mobile
                  communication;Mobile computing;Sensors;Graphical
                  Environment;Pervasive Mobile Applications;Service
                  Composition},
  doi =		 {10.1109/TMC.2015.2422295},
  ISSN =	 {1536-1233},
  review = 	 {fbie: rejected <2016-01-15 15:09:41>},
}

@INPROCEEDINGS{6344474,
  author =	 {Cypher, A.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2012 IEEE Symposium on},
  title =	 {Automating data entry for end users},
  year =	 2012,
  pages =	 {23-30},
  abstract =	 {Data entry professionals perform lengthy, repetitive
                  tasks by hand, usually without the support of
                  software tools. Since existing generic tools for end
                  user programming were unable to automate data entry
                  tasks, we worked with two data entry professionals
                  on the iterative design and development of a new
                  tool, named CoScripter Tables. The tool was made
                  available within our corporation as a prototype and
                  has been successfully adopted and is in regular
                  use. This paper characterizes the needs of data
                  entry professionals, describes the novel features of
                  our tool, and presents a survey of 16 users which
                  validates its use in a variety of real-world data
                  entry tasks.},
  keywords =	 {office automation;personal computing;professional
                  aspects;software prototyping;user
                  interfaces;CoScripter table;data entry
                  automation;data entry professional;end user
                  programming;generic tool;iterative
                  design;Browsers;Business;Manuals;Programming
                  profession;Servers;Web pages;automation;data
                  entry;end user programming;manual tasks;programming
                  by demonstration;user interface design;web tools},
  doi =		 {10.1109/VLHCC.2012.6344474},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:09:44>},
}

@INPROCEEDINGS{6142320,
  author =	 {Cherrier, S. and Ghamri-Doudane, Y.M. and Lohier,
                  S. and Roussel, G.},
  booktitle =	 {Internet of Things (iThings/CPSCom), 2011
                  International Conference on and 4th International
                  Conference on Cyber, Physical and Social Computing},
  title =	 {D-LITe: Distributed Logic for Internet of Things
                  Services},
  year =	 2011,
  pages =	 {16-24},
  abstract =	 {Smartphones, PDA, Sensors, Actuators, Phidgets and
                  Smart Objects (i.e. objects with processing and
                  networking capabilities) are more and more present
                  in everyday's life. Merging all these technologies
                  with the Internet is often described as 'Internet of
                  Things' (IoT). In the IoT vision, Things around us
                  provide a pervasive network of interacting and
                  interconnected devices. However building IoT
                  applications is a long and arduous work, reserved
                  for specialists, requiring specific knowledge's in
                  terms of network protocols and programming
                  languages. The lack of widespread and
                  easy-to-configure solutions is an obstacle for the
                  development of this area. A universal framework,
                  offering simplification and standardization, could
                  facilitate the emergence of this promising field in
                  terms of applications and business. IoT needs a
                  solid foundation for rapid, simple development and
                  deployment of new services. In this paper, we
                  present D-LITe, a universal framework for building
                  IoT applications over heterogeneous sets of small
                  devices. D-LITe offers solutions for deploying
                  application's logic, and executing it on Smart
                  Objects despite their heterogeneity. An
                  implementation of D-LITe on tiny devices, such as
                  TelosB motes, allows to show that our framework is
                  realistic even with the constraints of such
                  devices.},
  keywords =	 {Internet;ubiquitous computing;D-LITe;Internet of
                  things services;IoT applications;distributed
                  logic;interconnected devices;network
                  protocols;pervasive network;programming
                  languages;universal framework;Computer
                  architecture;Hardware;Internet;Presses;Protocols;Sensors;Zigbee;Distributed
                  logic;Services Choreography Architecture;Web of
                  Thing},
  doi =		 {10.1109/iThings/CPSCom.2011.33},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:09:53>},
}

@INPROCEEDINGS{7031239,
  author =	 {Fujima, J. and Jantke, K.P.},
  booktitle =	 {Consumer Electronics (GCCE), 2014 IEEE 3rd Global
                  Conference on},
  title =	 {Web service wrapping technologies for customizable
                  consumer electronics},
  year =	 2014,
  pages =	 {560-564},
  abstract =	 {Many vendors or producers of consumer electronics
                  provide web services for collecting data from
                  consumer devices or accessing it from web
                  applications. In this paper, we develop an approach
                  for supporting users of consumer devices in building
                  customized applications on demand. We use Webble
                  technology, a component-based middleware system, as
                  a base technology for distribution of visual
                  components. Users can reuse web services that are
                  connected to data or devices by wrapping those web
                  services as visual components. We demonstrate the
                  potential of the approach with an application
                  example with real world consumer web services.},
  keywords =	 {Web services;consumer electronics;data
                  acquisition;middleware;object-oriented
                  programming;software reusability;Web service
                  wrapping technologies;Webble
                  technology;component-based middleware
                  system;consumer devices;customizable consumer
                  electronics;data collection;real world consumer Web
                  services;visual component distribution;Data
                  visualization;Media;Programming;Visualization;Web
                  services;Web service composition;component-based
                  middleware;end-user programming;mash-up;web service
                  wrapping},
  doi =		 {10.1109/GCCE.2014.7031239},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:09:54>},
}

@INPROCEEDINGS{4976587,
  author =	 {Mhereeg, M. and McPhee, D. and Hole, S. and Angel,
                  P.},
  booktitle =	 {Autonomic and Autonomous Systems, 2009. ICAS
                  '09. Fifth International Conference on},
  title =	 {Automatic Classification and Graphical
                  Representation of Interactive User Activity via .NET
                  Windows Service Agent Technology},
  year =	 2009,
  pages =	 {94-99},
  abstract =	 {The paper describes the design and implementation of
                  a .NET windows service based agent which functions
                  autonomously and automatically collects data for
                  subsequent analysis and graphical presentation of
                  spreadsheet data. The approach used to develop the
                  automation aspects of the agent implementation is
                  also presented, together with features of the
                  graphical tool developed using this approach.},
  keywords =	 {computer graphics;interactive systems;network
                  operating systems;software agents;spreadsheet
                  programs;.NET windows service agent
                  technology;automatic classification;graphical
                  representation;interactive user activity;spreadsheet
                  data;Automation;Computerized monitoring;Condition
                  monitoring;Data analysis;Filtering;Management
                  training;Mathematical model;Paper
                  technology;Software agents;Yarn;Automatic
                  Classification;Autonomous Systems;Graphical
                  Representation;Software Agent;Spreadsheet},
  doi =		 {10.1109/ICAS.2009.60},
  month =	 {April},
  review = 	 {fbie: rejected <2016-01-15 15:09:57>},
}

@INBOOK{6276931,
  author =	 {Erickson, T. and McDonald, D.},
  booktitle =	 {HCI Remixed:Reflections on Works That Have
                  Influenced the HCI Community},
  title =	 {References},
  year =	 2007,
  pages =	 {309-329},
  abstract =	 {Over almost three decades, the field of
                  human-computer interaction (HCI) has produced a rich
                  and varied literature. Although the focus of
                  attention today is naturally on new work, older
                  contributions that played a role in shaping the
                  trajectory and character of the field have much to
                  tell us. The contributors to HCI Remixed were asked
                  to reflect on a single work at least ten years old
                  that influenced their approach to HCI. The result is
                  this collection of fifty-one short, engaging, and
                  idiosyncratic essays, reflections on a range of
                  works in a variety of forms that chart the emergence
                  of a new field. An article, a demo, a book: any of
                  these can solve a problem, demonstrate the
                  usefulness of a new method, or prompt a shift in
                  perspective. HCI Remixed offers us glimpses of how
                  this comes about. The contributors consider such HCI
                  classics as Sutherland's Sketchpad, Englebart's demo
                  of NLS, and Fitts on Fitts' Law--and such forgotten
                  gems as Pulfer's NRC Music Machine, and Galloway and
                  Rabinowitz's Hole in Space. Others reflect on works
                  somewhere in between classic and forgotten--Kidd's
                  "The Marks Are on the Knowledge Worker," King
                  Beach's "Becoming a Bartender," and others. Some
                  contributors turn to works in neighboring
                  disciplines--Henry Dreyfuss's book on industrial
                  design, for example--and some range farther afield,
                  to Lovelock's Gaia hypothesis and Jane Jacobs's The
                  Death and Life of Great American Cities. Taken
                  together, the essays offer an accessible, lively,
                  and engaging introduction to HCI research that
                  reflects the diversity of the field's
                  beginnings.Thomas Erickson is Research Staff Member
                  at the IBM T. J. Watson Research Center. David
                  W. McDonald is Assistant Professor at the
                  Information School at the University of Was hington,
                  Seattle.},
  publisher =	 {MIT Press},
  isbn =	 9780262256070,
  url =
                  {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6276931},
  review = 	 {fbie: rejected <2016-01-15 15:09:58>},
}

@INPROCEEDINGS{4351335,
  author =	 {Segal, J.},
  booktitle =	 {Visual Languages and Human-Centric Computing,
                  2007. VL/HCC 2007. IEEE Symposium on},
  title =	 {Some Problems of Professional End User Developers},
  year =	 2007,
  pages =	 {111-118},
  abstract =	 {By the term 'professional end user developers' we
                  mean people such as research scientists who work in
                  highly technical, knowledge-rich domains and who
                  develop software in order to further their
                  professional goals. In common with other end user
                  developers, professional end user developers do not
                  describe themselves as software engineers and have
                  no formal training in software engineering. They
                  differ from most other end user developers, however,
                  in that learning programming languages rarely
                  presents them with any problem. In this paper,
                  drawing on data from field studies of different
                  groups of professional end users, we examine the
                  problems that such people face in meeting the
                  demands of software development given the culture in
                  which they work and their normal development
                  practice. Understanding these problems is an
                  essential prerequisite to developing tools,
                  techniques etcetera to support professional end user
                  development.},
  keywords =	 {software development management;knowledge-rich
                  domains;learning programming languages;professional
                  end user developers;software development;software
                  engineering;Biological information
                  theory;Collaborative software;Computer
                  languages;Engineering drawings;Java;Programming
                  profession;Robustness;Software engineering;Software
                  performance;Software tools},
  doi =		 {10.1109/VLHCC.2007.17},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:10:00>},
}

@ARTICLE{4731230,
  author =	 {Obrenovic, Z. and Gasevic, D.},
  journal =	 {Services Computing, IEEE Transactions on},
  title =	 {End-User Service Computing: Spreadsheets as a
                  Service Composition Tool},
  year =	 2008,
  volume =	 1,
  number =	 4,
  pages =	 {229-242},
  abstract =	 {In this paper, we show how spreadsheets, an end-user
                  development paradigm proven to be highly productive
                  and simple to learn and use, can be used for complex
                  service compositions. We identify the requirements
                  for spreadsheet-based service composition, and
                  present our framework that implements these
                  requirements. Our framework enables spreadsheets to
                  send requests and retrieve results from various
                  local and remote services. We show how our tools
                  support different composition patterns, and how the
                  style of declarative dependencies of spreadsheets
                  can facilitate service composition. We also discuss
                  novel issues identified by using the framework in
                  several projects and education.},
  keywords =	 {Web services;human computer
                  interaction;middleware;object-oriented
                  programming;spreadsheet programs;AMICO midleware;Web
                  service;complex service composition
                  pattern;declarative dependency;end-user
                  development;end-user service-oriented
                  computing;spreadsheet service composition
                  tool;Aggregates;Data
                  structures;Media;Middleware;Software;System-on-a-chip;Web
                  services;Distribution;Maintenance;Online Information
                  Services;Spreadsheets;and Enhancement},
  doi =		 {10.1109/TSC.2008.16},
  ISSN =	 {1939-1374},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:10:03>},
}

@INPROCEEDINGS{6149454,
  author =	 {Thorne, S.},
  booktitle =	 {System Science (HICSS), 2012 45th Hawaii
                  International Conference on},
  title =	 {The Misuse of Spreadsheets in the Nuclear Fuel
                  Industry: The Falsification of Safety Critical
                  Nuclear Fuel Data Using Spreadsheets at British
                  Nuclear Fuels Limited (BNFL)},
  year =	 2012,
  pages =	 {4633-4640},
  abstract =	 {This paper considers the management, technological
                  and human factor issues that led to the BNFL fuel
                  rod spreadsheet data falsification incident in
                  1999. BNFL discovered in 1999 that some data
                  supporting quality assurance and safety processes
                  had been falsified by BNFL workers using
                  spreadsheets. The implication of this finding was
                  that some of the Mixed Oxide Fuel Pellets shipped to
                  customers in Japan for use in nuclear reactors were
                  of an unknown mass and quality. This meant that the
                  use of the MOX pellets fuel produced by BNFL would
                  introduce uncontrolled factors into the safe
                  operation of nuclear reactors. This could result in
                  uncontrolled nuclear reactions and may have serious
                  implications. The BNFL workers had cloned
                  spreadsheets containing micrometer measurements and
                  adjusted lot and batch numbers so that each
                  spreadsheet appeared to be a genuine reflection of
                  the quality and safety procedures put in place to
                  ensure that the pellet dimensions, density and
                  surface features are known and within acceptable
                  tolerances. This paper will examine the production
                  of MOX pellets at the Sellafield site, the
                  falsification of data and the report commissioned by
                  HM Nuclear Inspectorate. The paper will then
                  identify a number of managerial and technological
                  failings that led BNFL to use spreadsheets for
                  recording such data.},
  keywords =	 {fission reactors;fuel processing industries;nuclear
                  power;safety-critical software;spreadsheet
                  programs;BNFL;British Nuclear Fuels
                  Limited;Japan;falsification;mixed oxide fuel
                  pellets;nuclear fuel industry;nuclear
                  reactors;safety critical nuclear fuel
                  data;spreadsheets;Inductors;Neutrons;Nuclear
                  fuels;Quality control;Safety;Data falsification;End
                  User Computing;Ergonomics;Nuclear power;Spreadsheet
                  Risk},
  doi =		 {10.1109/HICSS.2012.579},
  ISSN =	 {1530-1605},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:10:33>},
}

@INPROCEEDINGS{7195605,
  author =	 {Feifei Hang and Liping Zhao},
  booktitle =	 {Web Services (ICWS), 2015 IEEE International
                  Conference on},
  title =	 {Supporting End-User Service Composition: A
                  Systematic Review of Current Activities and Tools},
  year =	 2015,
  pages =	 {479-486},
  abstract =	 {This paper presents a systematic literature review
                  of end-user service composition. It reviews current
                  activities performed by end users, and tools and
                  approaches that enable them to compose and develop
                  service systems from Web Services. The paper also
                  highlights some key open research issues for the
                  future.},
  keywords =	 {Web services;Web services;end-user service
                  composition;Bibliographies;Programming;Search
                  problems;Systematics;Testing;Visualization;Web
                  services;end user;end-user computing;end-user
                  development;end-user programming;end-user service
                  composition;platform;service composition;systematic
                  literature review},
  doi =		 {10.1109/ICWS.2015.70},
  month =	 {June},
  review = 	 {fbie: rejected <2016-01-15 15:10:34>},
}

@INPROCEEDINGS{1372333,
  author =	 {Abraham, R.},
  booktitle =	 {Visual Languages and Human Centric Computing, 2004
                  IEEE Symposium on},
  title =	 {Identifying Structure in Spreadsheets},
  year =	 2004,
  pages =	 {267-268},
  abstract =	 {Spreadsheets are among the most commonly used
                  programming systems in the world. Existing
                  spreadsheets are rife with errors, some of which
                  have serious impacts. We are working on algorithms
                  and strategies that automatically infer the
                  structure of spreadsheets. This information can be
                  used to develop systems that enable end users to
                  develop safer spreadsheets},
  keywords =	 {programming;reliability;spreadsheet
                  programs;programming systems;spreadsheet
                  development;structure identification;Computer
                  errors;Computer science education;Costs;Educational
                  programs;Error analysis;Inspection;Mathematics;Power
                  system modeling;Programming profession;Vehicles},
  doi =		 {10.1109/VLHCC.2004.30},
  month =	 {Sept},
  review = 	 {fbie: accepted <2016-01-15 15:10:44>},
}

@INPROCEEDINGS{4351328,
  author =	 {Wiedenbeck, S. and Xiaoning Sun and Chintakovid, T.},
  booktitle =	 {Visual Languages and Human-Centric Computing,
                  2007. VL/HCC 2007. IEEE Symposium on},
  title =	 {Antecedents to End Users' Success in Learning to
                  Program in an Introductory Programming Course},
  year =	 2007,
  pages =	 {69-72},
  abstract =	 {Multiple factors combine to affect end users'
                  success in learning to program. The goal of this
                  research is to empirically investigate several
                  factors that may predict learning to program in an
                  introductory programming course for end users. The
                  findings showed that software self-efficacy,
                  programming self-efficacy, and computer playfulness
                  were not direct predictors of successful
                  programming; however, together they influenced
                  computer interest, which in turn affected
                  performance. The contribution of this paper is a
                  model of the joint effects of a set of factors for
                  end-user success in learning to program in a formal
                  course setting.},
  keywords =	 {computer science education;educational
                  courses;programming;influenced computer
                  interest;introductory programming course;programming
                  self-efficacy;software self-efficacy;Application
                  software;Computer applications;Computer science
                  education;Databases;Educational
                  institutions;Information resources;Information
                  science;Problem-solving;Programming profession;Sun},
  doi =		 {10.1109/VLHCC.2007.8},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:10:47>},
}

@INPROCEEDINGS{184181,
  author =	 {Hoffer, J.A. and Wynne, B.E.},
  booktitle =	 {System Sciences, 1991. Proceedings of the
                  Twenty-Fourth Annual Hawaii International Conference
                  on},
  title =	 {Reflections about IS doctoral programs: a status
                  report on Indiana University and doctoral education
                  in general},
  year =	 1991,
  volume =	 {iii},
  pages =	 {510-519 vol.3},
  abstract =	 {A review is given of the history and status of the
                  MIS area, with emphasis on the IS doctoral program,
                  at Indiana University. The discussion includes the
                  graduate curriculum and teaching mission, philosophy
                  of doctoral education at IU and culture of IS
                  doctoral program, research paradigms practiced,
                  placement of doctoral graduates, strengths and
                  weaknesses of the program, and faculty interests,
                  among other characteristics. The authors also use
                  their experience and analysis of IS doctoral
                  education to raise issues of interest to all
                  doctoral/research schools},
  keywords =	 {computer science education;management information
                  systems;teaching;IS doctoral program;Indiana
                  University;MIS area;doctoral education;doctoral
                  graduates;doctoral/research schools;faculty
                  interests;graduate curriculum;research
                  paradigms;status report;teaching mission;Data
                  processing;Education;Educational
                  institutions;Educational products;Educational
                  programs;History;Information systems;Measurement
                  standards;Programming profession;Reflection},
  doi =		 {10.1109/HICSS.1991.184181},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:10:50>},
}

@ARTICLE{5232792,
  author =	 {Obrenovic, Z. and Gasevic, D.},
  journal =	 {Internet Computing, IEEE},
  title =	 {Mashing Up Oil and Water: Combining Heterogeneous
                  Services for Diverse Users},
  year =	 2009,
  volume =	 13,
  number =	 6,
  pages =	 {56-64},
  abstract =	 {Connecting heterogeneous services is a complex
                  endeavor that requires support at both the
                  middleware and user-interface levels. Offering users
                  a varied palette of mashup development environments
                  and service interfaces lets users choose elements
                  appropriate to their skill levels and their
                  tasks. The authors discuss their experiences using
                  various development paradigms, such as spreadsheets
                  and high-level scripting, to mash up diverse
                  services. They describe their middleware and service
                  adapters, which abstract the difference between
                  service interfaces, and compare several mashup
                  interfaces aimed at different user groups.},
  keywords =	 {middleware;user interfaces;diverse
                  users;heterogeneous services;mashup development
                  environment;mashup interfaces;middleware;service
                  interface;user interface level;end-user
                  development;mashups;middleware;scripting;service
                  mashups;spreadsheets},
  doi =		 {10.1109/MIC.2009.97},
  ISSN =	 {1089-7801},
  month =	 {Nov},
  review = 	 {fbie: rejected <2016-01-15 15:10:53>},
}

@INPROCEEDINGS{6468236,
  author =	 {Chang-Shing Perng and Rong Chang},
  booktitle =	 {e-Business Engineering (ICEBE), 2012 IEEE Ninth
                  International Conference on},
  title =	 {Methodology and Tool Design for Building Return on
                  Investment Models for IT Transformations},
  year =	 2012,
  pages =	 {177-184},
  abstract =	 {For any IT transformation with significant
                  investment, economic analysis is essential for
                  justifying the risks and expenditures. Much cost
                  modeling has been done for various types of IT
                  transformations, each looks into the unique aspects
                  of the concerned domains. This paper takes a
                  different direction and proposes a general
                  methodology named PANROI for quickly constructing
                  ROI/TCO models to be used in the field. A
                  declarative language, Excedo, is proposed for
                  expressing the model logic and building the user
                  interface. We present a case study on building an
                  ROI model for cloud computing using the methodology
                  and Excedo.},
  keywords =	 {cloud computing;costing;economics;investment;user
                  interfaces;Excedo declarative language;IT
                  transformations;PANROI;TCO model;cloud
                  computing;cost modeling;economic analysis;model
                  logic;return-on-investment models;user
                  interface;Analytical models;Biological system
                  modeling;Buildings;Business;Computational
                  modeling;Economics;Servers;Economic Analysis;Return
                  on Investment;Total Cost of Ownership},
  doi =		 {10.1109/ICEBE.2012.37},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:10:55>},
}

@INPROCEEDINGS{1372300,
  author =	 {Costabile, M.F. and Fogli, D. and Fresta, G. and
                  Mussio, P. and Piccinno, A.},
  booktitle =	 {Visual Languages and Human Centric Computing, 2004
                  IEEE Symposium on},
  title =	 {Virtual Workshops for Human-Centric Computing},
  year =	 2004,
  pages =	 {65-68},
  abstract =	 {Visual languages for human-computer interaction
                  (HCI) are a good basis for the development of
                  software environments to be used by professional
                  people such as engineers, geologists, medical
                  doctors, etc. The research we have conducted, along
                  with the experience we have gained working with
                  these people, has compelled us to develop software
                  environments that not only are easier to learn and
                  use, but also allow their users to tailor them to
                  their own needs, and to even create or modify
                  software artifacts. The design methodology that we
                  have developed is refined in this paper, giving
                  insights emerging from our recent experiences, and
                  emphasizing how it supports human centric-computing
                  and end-user development},
  keywords =	 {human computer interaction;personal
                  computing;programming environments;visual
                  languages;end-user development;human-centric
                  computing;human-computer interaction;software
                  development;software environments;virtual
                  workshops;visual languages},
  doi =		 {10.1109/VLHCC.2004.62},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:10:57>},
}

@INPROCEEDINGS{7180124,
  author =	 {Barik, T. and Lubick, K. and Smith, J. and Slankas,
                  J. and Murphy-Hill, E.},
  booktitle =	 {Mining Software Repositories (MSR), 2015 IEEE/ACM
                  12th Working Conference on},
  title =	 {Fuse: A Reproducible, Extendable, Internet-Scale
                  Corpus of Spreadsheets},
  year =	 2015,
  pages =	 {486-489},
  abstract =	 {Spreadsheets are perhaps the most ubiquitous form of
                  end-user programming software. This paper describes
                  a corpus, called Fuse, containing 2,127,284 URLs
                  that return spreadsheets (and their HTTP server
                  responses), and 249,376 unique spreadsheets,
                  contained within a public web archive of over 26.83
                  billion pages. Obtained using nearly 60,000 hours of
                  computation, the resulting corpus exhibits several
                  useful properties over prior spreadsheet corpora,
                  including reproducibility and extendability. Our
                  corpus is unencumbered by any license agreements,
                  available to all, and intended for wide usage by
                  end-user software engineering researchers. In this
                  paper, we detail the data and the spreadsheet
                  extraction process, describe the data schema, and
                  discuss the trade-offs of Fuse with other corpora.},
  keywords =	 {Internet;software engineering;spreadsheet
                  programs;Fuse;Internet-scale corpus;data
                  schema;end-user programming software;end-user
                  software engineering researchers;extendable-scale
                  corpus;public Web archive;reproducible-scale
                  corpus;spreadsheet corpora;spreadsheet extraction
                  process;Data
                  mining;Fuses;Metadata;Pipelines;Software;Software
                  engineering;Uniform resource
                  locators;MapReduce;corpus;dataset;end-user software
                  engineering;spreadsheets},
  doi =		 {10.1109/MSR.2015.70},
  month =	 {May},
  review = 	 {fbie: accepted <2016-01-15 15:11:03>},
}

@INPROCEEDINGS{6645253,
  author =	 {Aghaee, S. and Pautasso, C. and De Angeli, A.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2013 IEEE Symposium on},
  title =	 {Natural End-User Development of Web Mashups},
  year =	 2013,
  pages =	 {111-118},
  abstract =	 {End-User Development (EUD) can be exploited on the
                  Web, where users have the opportunity to create
                  niche “Web Mashup” applications as a means to
                  address their long tail of situational needs in
                  different domains of application. In this paper, we
                  describe the design and evaluation of NaturalMash,
                  an innovative EUD system for mashups. NaturalMash
                  provides a high level of expressive power while it
                  is still usable by non-professional users. This
                  clearly distinguishes NaturalMash from existing
                  mashup EUD tools that are either too limited or
                  highly specialized for inexperienced users. The
                  NaturalMash user interface efficiently combines
                  different techniques such as live programming,
                  natural language programming, What You See Is What
                  You Get (WYSIWYG), and Programming by Demonstration
                  (PbD). The design of NaturalMash adopts a formative
                  evaluation approach, and has completed two design
                  and evaluation iterations. The paper reports the
                  results of the last formative evaluation and
                  discusses the implications of the findings. The
                  results are promising and suggest that the proposed
                  system has a short and gentle learning curve and
                  enables even non-professional users to rapidly build
                  useful mashups.},
  keywords =	 {Internet;iterative methods;natural language
                  processing;personal computing;EUD
                  system;NaturalMash;PbD;WYSIWYG;Web mashup
                  applications;evaluation iterations;learning
                  curve;live programming;mashup EUD tools;natural
                  end-user development;natural language
                  programming;nonprofessional users;programming by
                  demonstration;what you see is what you
                  get;Mashups;Natural
                  languages;Programming;Syntactics;User
                  interfaces;Visualization;YouTube;End-User
                  Development;Mashup Tools;Mashups;Natural Language
                  Programming},
  doi =		 {10.1109/VLHCC.2013.6645253},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:11:05>},
}

@INPROCEEDINGS{4720634,
  author =	 {Ahern, T.C.},
  booktitle =	 {Frontiers in Education Conference, 2008. FIE
                  2008. 38th Annual},
  title =	 {The effectiveness of visual programming for model
                  building in middle school},
  year =	 2008,
  pages =	 {S3D-8-S3D-13},
  abstract =	 {The National Center of Educational Statistics
                  (LACES) documents a troubling downward trend
                  starting in the eighth grade in conceptual
                  reasoning, scientific investigation, and practical
                  reasoning. The data indicate no improvement in the
                  eighth grade scores and by the time these students
                  reach the 12th grade the data show a downward
                  turn. The downward trend implicates the type of
                  curriculum being taught in the middle school. Middle
                  school students learn how to use reasoning in the
                  abstract, not in the context of real-world
                  problems. Modeling and simulation software is a
                  possible way out of this dilemma by learning about
                  potential implications of todaypsilas actions on
                  tomorrowpsilas outcomes. However, programming can
                  present a huge obstacle for middle school teachers
                  who want to integrate model building into their
                  curriculum. To overcome this hurdle we introduced
                  StarLogo, which uses an interface that simplifies
                  programming making it accessible even for
                  novices. StarLogo makes building programs as easy as
                  dragging color-coded puzzle-piece like statements
                  together. The paper reports on a usability study
                  that investigated the effectiveness of the visual
                  programming language of StarLogo from two
                  perspectives. Did the visual interface make
                  programming useful for middle school teachers and
                  effective as a teaching platform?},
  keywords =	 {computer aided instruction;user interfaces;visual
                  programming;StarLogo;middle school students;visual
                  interface;visual
                  programming;Bridges;Buildings;Computer
                  languages;Education;Educational
                  institutions;Mars;Performance gain;Programming
                  profession;Statistics;Usability;dynamic
                  models;end-user development;visual-programming},
  doi =		 {10.1109/FIE.2008.4720634},
  ISSN =	 {0190-5848},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:11:11>},
}

@INPROCEEDINGS{6021657,
  author =	 {Sarif, S.N. and Idris, S. and Zin, A.M.},
  booktitle =	 {Electrical Engineering and Informatics (ICEEI), 2011
                  International Conference on},
  title =	 {The design of blocks integration tool to support
                  end-user programming},
  year =	 2011,
  pages =	 {1-5},
  abstract =	 {End-user programming is a term that refers to
                  computer programming carried out by end users who do
                  not necessarily have a background in writing
                  programs in conventional programming
                  languages. There is much interest amongst end-users
                  to be able to write their own programs. In order to
                  support end-user programming, the concept of Block
                  Based Software Development has been introduced. In
                  this environment, end-users can develop applications
                  by selecting, customizing and combining software
                  blocks. A block is basically a single-layer software
                  component that can perform a specific function. It
                  is assumed that in this environment, there will be a
                  large number of blocks available to be used by the
                  end-users. Block Integration Tool is an Integrated
                  Development Environment (IDE) that can be used by
                  end-users to develop applications. By using this
                  tool, end-users can select a block and then drag it
                  into the work area. Customization can be done by
                  changing some properties of the block such as
                  colour, text, audio and video content. This block
                  can then be combined with the existing blocks in the
                  work area. Once the process of selecting and
                  combining blocks is completed, an application can
                  then be generated. Implementations are carried out
                  using Netbeans version 6.9. The evaluation of the
                  tool will be carried out to ensure that it is
                  suitable to be used by end users.},
  keywords =	 {integrated software;personal computing;programming
                  languages;software engineering;Netbeans;block based
                  software development;block integration tool;computer
                  programming;customization;end-user
                  programming;integrated development
                  environment;programming languages;single-layer
                  software component;software blocks;Color;Computer
                  languages;Connectors;Programming;Software;User
                  interfaces;Writing;Block-based;development
                  tool;end-user;integrating},
  doi =		 {10.1109/ICEEI.2011.6021657},
  ISSN =	 {2155-6822},
  month =	 {July},
  review = 	 {fbie: rejected <2016-01-15 15:11:16>},
}

@INPROCEEDINGS{6859629,
  author =	 {Tankovic, N. and Grbac, T.G. and Zagar, M.},
  booktitle =	 {Information and Communication Technology,
                  Electronics and Microelectronics (MIPRO), 2014 37th
                  International Convention on},
  title =	 {Experiences from building a EUD business portal},
  year =	 2014,
  pages =	 {551-556},
  abstract =	 {End user development (EUD) is the idea of providing
                  end users, professionals outside computer science
                  community, means to develop their own software. This
                  idea has received special attention by domain
                  experts who would like to easily modify software
                  applications to their needs, without intervention of
                  technical professionals and without learning
                  conventional programming languages. The end user
                  development is in fact a system property, closely
                  related to system adaptability that should be built
                  into a system to enable number of modifications at
                  different system levels securing powerful
                  expressions that would satisfy the end user
                  needs. This is a challenging requirement for every
                  software provider. There are a number of identified
                  system perspectives, critical to EUD, and general
                  guiding principles that should be
                  addressed. However, in reality, building these
                  properties into the concrete system, a number of
                  complex and interrelated issues have to be
                  solved. In this paper we report challenges that we
                  addressed while implementing end user development
                  capability into a software system within business
                  domain.},
  keywords =	 {business data processing;portals;software
                  engineering;EUD business portal;business
                  domain;computer science community;domain experts;end
                  user development;end user needs;general guiding
                  principles;software provider;system
                  adaptability;system
                  property;Contracts;Databases;Portals;Servers;Software;Synchronization},
  doi =		 {10.1109/MIPRO.2014.6859629},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:11:24>},
}

@INPROCEEDINGS{6211955,
  author =	 {Chang-shing Perng and Rong Chang and Tao Tao and So,
                  E. and Mihwa Choi and Shaikh, H.},
  booktitle =	 {Network Operations and Management Symposium (NOMS),
                  2012 IEEE},
  title =	 {Universal economic analysis methodology for IT
                  transformations},
  year =	 2012,
  pages =	 {558-561},
  abstract =	 {Economic analysis on the financial benefits and
                  risks is crucial for deciding whether an IT
                  transformation should take place. While the
                  financial analysis techniques for general investment
                  is well known, and there have been case studies for
                  many IT types of IT transformations, there is no
                  good methodology that an IT professional can follow
                  and readily conduct return on investment or total
                  cost analysis. This paper aims to fill this void and
                  proposes an economic analysis methodology that is
                  applicable to all IT transformations.},
  keywords =	 {cost-benefit analysis;investment;risk analysis;IT
                  professional;IT transformations;financial analysis
                  techniques;financial benefits;return on
                  investment;risk analysis;total cost
                  analysis;universal economic analysis
                  methodology;Buildings;Business;Cloud
                  computing;Economics;Mathematical model;Servers},
  doi =		 {10.1109/NOMS.2012.6211955},
  ISSN =	 {1542-1201},
  month =	 {April},
  review = 	 {fbie: rejected <2016-01-15 15:11:26>},
}

@INPROCEEDINGS{4402096,
  author =	 {Xufeng Liang and Marmaridis, I. and Ginige, A.},
  booktitle =	 {e-Business Engineering, 2007. ICEBE 2007. IEEE
                  International Conference on},
  title =	 {Facilitating Agile Model Driven Development and
                  End-User Development for EvolvingWeb-basedWorkflow
                  Applications},
  year =	 2007,
  pages =	 {231-238},
  abstract =	 {As Web applications take the centre-stage of today's
                  businesses, core business processes are increasingly
                  automated using Web technologies. We advocate agile
                  model driven development (AMDD) for streamlining the
                  development, and end-user development (EUD) for
                  managing the evolution of Web-based workflow
                  applications. In this paper, we will demonstrate how
                  such approach is realised through the smart business
                  object (SBO) technology and the lightweight business
                  process flow (LBPF) engine we have developed. The
                  synergy between the two enables a parallel mode of
                  development where developers can generate and
                  release the intended application within an extremely
                  compressed timeframe, while business end-users can
                  subsequently manage the evolution of their Web-based
                  workflow applications in a controlled environment
                  via Web-based tools.},
  keywords =	 {Internet;business data processing;Web
                  application;Web technology;Web-based workflow
                  application;agile model driven development;automated
                  business process;end-user development;lightweight
                  business process flow;smart business
                  object;Aerodynamics;Application
                  software;Australia;Concrete;Engines;Environmental
                  management;Pressure control;Programming;Resource
                  management;User interfaces},
  doi =		 {10.1109/ICEBE.2007.37},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:11:31>},
}

@INBOOK{6276955,
  author =	 {Erickson, T. and McDonald, D.},
  booktitle =	 {HCI Remixed:Reflections on Works That Have
                  Influenced the HCI Community},
  title =	 {Interaction Is the Future of Computing},
  year =	 2007,
  pages =	 {263-266},
  abstract =	 {This chapter contains section titled: P. Wegner,
                  1997: “Why Interaction Is More Powerful Than
                  Algorithms”},
  publisher =	 {MIT Press},
  isbn =	 9780262256070,
  url =
                  {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6276955},
  review = 	 {fbie: rejected <2016-01-15 15:11:33>},
}

@INPROCEEDINGS{615523,
  author =	 {Lawrence, D.R. and Shah, H.U. and Golder, P.},
  booktitle =	 {Software Technology and Engineering Practice,
                  1997. Proceedings., Eighth IEEE International
                  Workshop on [incorporating Computer Aided Software
                  Engineering]},
  title =	 {End user computing: how an organisation can maximise
                  potential},
  year =	 1997,
  pages =	 {352-363},
  abstract =	 {End user computing (EUC) is an activity that is
                  attracting increasing interest from information
                  systems (IS) researchers and business
                  organisations. The vast increase over recent years
                  of the use of IT as part of everyday business
                  activities, and the growing direct involvement of
                  business users in application development, clearly
                  has implications for modern organisations. We
                  discuss how an organisation might best approach the
                  task of optimising the effectiveness of end user
                  developed applications, and also of maximising the
                  contribution that can be made by IT specialists. As
                  part of this discussion we outline a modelling
                  approach which is designed to enable the prediction
                  of the impact of changes to identified success
                  factors on the effectiveness of end user developed
                  applications. We discuss the results of a
                  questionnaire survey of 69 business users. We show
                  how business users can be categorised by their
                  levels of IT/business/IS knowledge and expertise,
                  and how this can be used to identify which users are
                  best suited to taking part in end user centred
                  development projects},
  keywords =	 {business data processing;information
                  systems;information technology;personal
                  computing;activity profiles;application
                  development;business organisations;business
                  users;effectiveness prediction;end user centred
                  development projects;end user computing;end user
                  developed applications;information systems
                  researchers;modelling approach;questionnaire
                  survey;success factors;Computer science;Information
                  systems;Information technology;Mathematical
                  model;Mathematics;Organizational aspects;Predictive
                  models;Productivity;Software
                  performance;Workstations},
  doi =		 {10.1109/STEP.1997.615523},
  month =	 {Jul},
  review = 	 {fbie: rejected <2016-01-15 15:11:35>},
}

@INPROCEEDINGS{5447396,
  author =	 {Sousa, J.P.},
  booktitle =	 {Complex, Intelligent and Software Intensive Systems
                  (CISIS), 2010 International Conference on},
  title =	 {Foundations of Team Computing: Enabling End Users to
                  Assemble Software for Ubiquitous Computing},
  year =	 2010,
  pages =	 {9-16},
  abstract =	 {Team computing concerns the coordination of teams
                  comprised of software components, devices, and
                  humans operating in ubiquitous computing
                  environments. Teams have no central control:
                  elements play their roles autonomously, and overall
                  behavior is emergent. The proposed model promotes
                  resilience to incompleteness and inconsistency in
                  team designs, as well as to run-time faults. Team
                  computing is geared towards enabling end users to
                  design and deploy their own teams in domains such as
                  home surveillance, assisted living, and energy
                  management. This paper presents the foundations of
                  team computing, including its operational semantics
                  and a framework to automate the verification of
                  desired behaviors. The paper also discusses the
                  implementation of a software infrastructure for the
                  automatic deployment of systems based on team
                  designs.},
  keywords =	 {software architecture;ubiquitous computing;assisted
                  living;end users;energy management;home
                  surveillance;software components;software
                  infrastructure;team computing;team
                  designs;ubiquitous computing;Assembly;Centralized
                  control;Energy management;Home
                  computing;Humans;Pervasive
                  computing;Resilience;Runtime;Surveillance;Ubiquitous
                  computing;end-user development;service-oriented
                  computing;software architectures;ubiquitous
                  computing},
  doi =		 {10.1109/CISIS.2010.89},
  month =	 {Feb},
  review = 	 {fbie: rejected <2016-01-15 15:11:36>},
}

@INPROCEEDINGS{6462495,
  author =	 {Santos, L. and Castro, A. and de Menezes, C.S.},
  booktitle =	 {Frontiers in Education Conference (FIE), 2012},
  title =	 {Flexible virtual environments for teaching and
                  learning},
  year =	 2012,
  pages =	 {1-6},
  abstract =	 {Distance learning boosts the development of
                  Web-based software aimed at supporting teaching and
                  learning processes. More recently, information
                  technology became part of pedagogies since their
                  conception, especially for those called “pedagogical
                  architectures” focused mainly on learning and on the
                  processes of creation, discovery and invention. This
                  scenario presented a new challenge: software tools
                  need to facilitate the expression of individual
                  idiosyncrasies and teams as well as incorporate
                  multiple fine-tuned ways of working. It became
                  necessary to design flexible virtual environments
                  that meet the needs of its users, allowing runtime
                  changes in their structures and interfaces. In this
                  paper we present a platform designed under a novel
                  paradigm for designing virtual environments, with
                  flexibility to be combined and to define several
                  virtual environments, runtime changeable without
                  loss of data. As proof of concept, a software
                  platform was developed and used to model and
                  implement a total of 11 well-known virtual
                  environments spanning from usual ones like forum,
                  blog and wiki, to more complex examples. Finally, in
                  order to evaluate the platform's ability to
                  accommodate changes, a case-study was carried out in
                  a real-world event with a class of 10 multipliers
                  (teachers responsible for training other teachers)
                  that reported their use of the platform's resources
                  available so far.},
  keywords =	 {Internet;computer aided instruction;distance
                  learning;teacher training;teaching;virtual
                  reality;Web-based software;distance
                  learning;flexible virtual environments;information
                  technology;learning process;pedagogical
                  architectures;real-world event;software
                  platform;teacher training;teaching process;Computer
                  architecture;Production;Prototypes;Runtime;Software;Virtual
                  environments;XML;Distance Learning;Flexible Virtual
                  Environments;Tailorability},
  doi =		 {10.1109/FIE.2012.6462495},
  ISSN =	 {0190-5848},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:11:37>},
}

@INPROCEEDINGS{1698758,
  author =	 {Repenning, A. and Ioannidou, A.},
  booktitle =	 {Visual Languages and Human-Centric Computing,
                  2006. VL/HCC 2006. IEEE Symposium on},
  title =	 {AgentCubes: Raising the Ceiling of End-User
                  Development in Education through Incremental 3D},
  year =	 2006,
  pages =	 {27-34},
  abstract =	 {Now that we have end-user programming environments
                  capable of empowering kids with no programming
                  background to build games in a matter of hours, a
                  new quest for raising the ceiling of end-user
                  development is emerging. Environments not only
                  focusing on programming, but also including rich
                  media such as 3D, could work as compelling tools for
                  introducing information technology at the K-12
                  level. The new challenge is raising the ceiling
                  without raising the threshold. Based on our
                  experience with AgentSheets, a tool used worldwide
                  for computational science and game design
                  applications, we created a new authoring tool called
                  AgentCubes. This article discusses the notion of
                  incremental 3D as a design approach for media-rich
                  end-user development with low threshold and high
                  ceiling in education},
  keywords =	 {authoring systems;computer aided
                  instruction;computer science
                  education;programming;programming
                  environments;AgentCubes authoring
                  tool;education;end-user programming;incremental
                  3D;media-rich end-user development;Computational
                  modeling;Computer languages;Computer
                  science;Computer science education;Computer
                  vision;Educational programs;Information
                  technology;Instruments;Programming
                  environments;Programming profession},
  doi =		 {10.1109/VLHCC.2006.7},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:11:39>},
}

@INPROCEEDINGS{4353692,
  author =	 {Koskinen, E. and Salminen, J.},
  booktitle =	 {Engineering in Medicine and Biology Society,
                  2007. EMBS 2007. 29th Annual International
                  Conference of the IEEE},
  title =	 {A customizable mobile tool for supporting health
                  behavior interventions},
  year =	 2007,
  pages =	 {5907-5910},
  abstract =	 {Recorded self-observations on a regular basis is an
                  important component in many health behavior
                  interventions. Using information and communication
                  technologies (ICT) and especially mobile eHealth
                  applications is a promising way of improving
                  user-friendliness and possibly the overall
                  effectiveness of self-monitoring. Mobility as such
                  brings the added value of continuous availability
                  and timely information access. One additional
                  benefit of ICT based solutions is the possibility
                  for various types of customization, allowing support
                  for a wider set of application requirements than was
                  originally planned, and meeting changing needs and
                  targets of individuals, groups or larger user
                  segments. In this paper, we present a customizable
                  mobile application for recording and managing health
                  related self-observations, Wellness Diary, and the
                  ideas and technical solutions for supporting
                  tailoring of the application. The main idea is to
                  allow end-users to freely change the data model in
                  the application, and customize related data
                  presentations. This work has been done in Nuadu ITEA
                  project, as well as further work where the
                  effectiveness of the mobile tool and other ICT
                  technologies will be investigated in a controlled
                  trial in Finland. We'll also present shortly a
                  counterpart for the mobile application, a web
                  service that should bring some added value for the
                  end user.},
  keywords =	 {health care;patient monitoring;personal
                  computing;Nuadu ITEA project;customizable mobile
                  tool;eHealth applications;health behavior
                  interventions;self observations;wellness
                  diary;Clinical trials;Data
                  models;Internet;Measurement standards;Mobile
                  communication;Mobile handsets;Mood;Personal digital
                  assistants;Stress measurement;User
                  interfaces;Cellular Phone;Computers, Handheld;Data
                  Display;Database Management Systems;Equipment
                  Design;Equipment Failure Analysis;Finland;Health
                  Behavior;Information Storage and Retrieval;Medical
                  Records;Medical Records Systems,
                  Computerized;Software;Telemedicine;User-Computer
                  Interface},
  doi =		 {10.1109/IEMBS.2007.4353692},
  ISSN =	 {1557-170X},
  month =	 {Aug},
  review = 	 {fbie: rejected <2016-01-15 15:11:42>},
}

@INPROCEEDINGS{6215394,
  author =	 {Siricharoen, W.V.},
  booktitle =	 {Digital Information and Communication Technology and
                  it's Applications (DICTAP), 2012 Second
                  International Conference on},
  title =	 {User persona roles in the end-user web developing
                  approach},
  year =	 2012,
  pages =	 {415-420},
  abstract =	 {End-user is very important to require the system
                  efficiently; however, most of the time they are not
                  the one who create the system. The best thing they
                  can do is give the system requirements and the
                  system workflow to the developers. The ownership is
                  more significant to include system acceptation by
                  letting end-users design the system themselves. This
                  aim of the research is to support the end-user web
                  developing in software engineering discipline by
                  using the real case scenario. The main task is to
                  develop end-user personal website. The final result
                  is that the end-user is able to create
                  surveys/questionnaires online. This paper is the
                  walk through and discussion approaches of how to
                  utilize end-user persona. Evaluating exist tools by
                  developers is also the essential step to generate
                  the website according to enduser skills and
                  requirements. The paper highlights the important
                  issue of end-user involvement in the development
                  processes. The end-user collaboration on the system
                  is also shown in the paper. The conclusion and
                  discussion of further research is addressed in the
                  last part of the paper.},
  keywords =	 {Internet;Web sites;software engineering;end-user Web
                  developing approach;end-user collaboration;end-user
                  involvement;end-user personal Website;end-user
                  requirements;end-user skills;end-users design;real
                  case scenario;software engineering discipline;system
                  acceptation;system requirements;system workflow;user
                  persona roles;Educational institutions;Electronic
                  learning;Electronic mail;Human computer
                  interaction;Software;Software
                  engineering;Training;End-user
                  Development(EUD);Persona;Software Engineering;User
                  Centered Design(UCD);Website Developing},
  doi =		 {10.1109/DICTAP.2012.6215394},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:11:44>},
}

@INPROCEEDINGS{6984187,
  author =	 {Martin, D. and Lamsfus, C. and Alzua-Sorzabal,
                  A. and Torres-Manzanera, E.},
  booktitle =	 {Future Internet of Things and Cloud (FiCloud), 2014
                  International Conference on},
  title =	 {Empowering End-Users to Develop Context-Aware Mobile
                  Applications Using a Web Platform},
  year =	 2014,
  pages =	 {139-145},
  abstract =	 {Context-aware mobile applications can adapt their
                  information and functionalities according to the
                  users' needs. The required personalization layer is
                  usually implemented by programmers due to the
                  complex processes that are involved. An important
                  trend in software development is that more and more
                  applications are being written not only by
                  programmers but also by people with expertise in
                  other domains. Since most of the existing
                  context-aware development toolkits are designed for
                  programmers, non-technical users cannot implement
                  these kinds of applications. This article presents a
                  web-based platform to ease the development of
                  context-aware mobile applications by non-technical
                  end-users. The architecture and implementation
                  details of the system are presented and the
                  evaluation of the platform by non-programmers is
                  discussed.},
  keywords =	 {Internet;middleware;mobile computing;software
                  engineering;Web-based platform;context-aware
                  development toolkits;context-aware mobile
                  applications;middleware;nonprogrammers;nontechnical
                  end-users;software
                  development;Cognition;Context;Context modeling;Data
                  models;Mobile communication;Mobile handsets;Object
                  oriented modeling;context-awareness;end-user
                  development;middleware;mobile},
  doi =		 {10.1109/FiCloud.2014.31},
  month =	 {Aug},
  review = 	 {fbie: rejected <2016-01-15 15:11:45>},
}

@INPROCEEDINGS{495415,
  author =	 {Panko, R.R.},
  booktitle =	 {System Sciences, 1996., Proceedings of the
                  Twenty-Ninth Hawaii International Conference on ,},
  title =	 {Minitrack on Risks in End User Computing},
  year =	 1996,
  volume =	 2,
  pages =	 {324-},
  abstract =	 {Not Available},
  keywords =	 {Buildings;Debugging;Error analysis;Image
                  resolution;Inspection;Laboratories;Mission critical
                  systems;Sampling methods;Scattering},
  doi =		 {10.1109/HICSS.1996.495415},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:11:46>},
}

@INPROCEEDINGS{6344486,
  author =	 {Athreya, B. and Bahmani, F. and Diede, A. and
                  Scaffidi, C.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2012 IEEE Symposium on},
  title =	 {End-user programmers on the loose: A study of
                  programming on the phone for the phone},
  year =	 2012,
  pages =	 {75-82},
  abstract =	 {Microsoft TouchDevelop is a programming environment
                  enabling users use their phones to create scripts
                  that run on the mobile phones. This is achieved via
                  a semi-structured editor and a programming language
                  with several distinctive features, such as support
                  for using smartphone hardware. In order to uncover
                  opportunities for future tool development aimed at
                  facilitating end-user programming of phones on
                  phones, we have investigated the kinds of scripts
                  that people are creating with the current tool set
                  as well as what problems they ask for help with
                  solving. This paper is the first to study how
                  end-user programmers “in the wild” are programming
                  mobile phones. In particular, no previous study has
                  investigated the ways in which end users
                  programmatically use mobile phones' special hardware
                  (e.g., GPS, accelerometer, gyroscope) for practical
                  everyday purposes. We discovered that, in essence,
                  people are using TouchDevelop to create apps:
                  downloadable applications with small, fairly
                  reliable feature sets that take advantage of mobile
                  hardware. In addition, we identified several areas
                  for further innovation aimed at enhancing the
                  programming tool and the online repository where
                  users share scripts with one another.},
  keywords =	 {mobile computing;software engineering;Microsoft
                  TouchDevelop;end-user programmers;mobile
                  phones;phone programming;programming
                  language;semistructured
                  editor;Animation;Context;Games;Hardware;Mobile
                  handsets;Programming;Programming
                  environments;empirical studies;end-user
                  programming;human-centric computing;mobile
                  computing},
  doi =		 {10.1109/VLHCC.2012.6344486},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:11:50>},
}

@ARTICLE{410158,
  author =	 {Jones, C.},
  journal =	 {Computer},
  title =	 {End user programming},
  year =	 1995,
  volume =	 28,
  number =	 9,
  pages =	 {68-70},
  abstract =	 {End-user software development is a growing avocation
                  in every industry and every country. By the middle
                  of the next century, computer literacy and
                  programming skills will be almost as common as
                  reading and writing skills. Almost every knowledge
                  worker in the world will be able to program if he or
                  she sets out to do so. The implications of
                  widespread end-user software are only just beginning
                  to be considered. There are many exciting
                  possibilities and some potential hazards. The time
                  is now at hand to consider business topics such as
                  ownership of end-user applications and liability in
                  cases of significant errors},
  keywords =	 {computer literacy;human resource management;personal
                  computing;personnel;product
                  liability;programming;software development
                  management;business topics;computer
                  literacy;end-user applications ownership;end-user
                  programming;end-user software
                  development;errors;hazards;knowledge
                  workers;liability;programming skills;widespread
                  end-user software},
  doi =		 {10.1109/2.410158},
  ISSN =	 {0018-9162},
  month =	 {Sep},
  review = 	 {fbie: rejected <2016-01-15 15:11:51>},
}

@INPROCEEDINGS{1372323,
  author =	 {Rode, J. and Rosson, M.B. and Perez-Quinones, M.A.},
  booktitle =	 {Visual Languages and Human Centric Computing, 2004
                  IEEE Symposium on},
  title =	 {End-Users' Mental Models of Concepts Critical to Web
                  Application Development},
  year =	 2004,
  pages =	 {215-222},
  abstract =	 {We report an empirical study of nonprogrammers'
                  mental models regarding particular concerns in Web
                  application development such as input validation,
                  database lookup, and overview-detail
                  relationships. The goal of the study was to
                  understand how nonprogrammers think about the data
                  and logic underlying a Web application. In
                  continuing work, we are using this understanding as
                  a basis for the design of tools and development
                  resources that are intuitive and easy to use. The
                  current paper describes the empirical work that was
                  done and discusses its implications for the design
                  of end-user Web development tools that could be used
                  to develop Web applications of intermediate
                  complexity},
  keywords =	 {Internet;Web design;software engineering;Web
                  application development;Web development tools;Web
                  engineering;database lookup;development
                  resources;end-user mental models;end-user
                  programming;input
                  validation;nonprogrammers;overview-detail
                  relationships;tool design;Cognitive science;Computer
                  languages;Functional programming;HTML;Image
                  databases;Information retrieval;Logic
                  design;Productivity;Programming profession;Research
                  and development management;end-user
                  programming;mental models;web application
                  development;web engineering},
  doi =		 {10.1109/VLHCC.2004.25},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:11:54>},
}

@INPROCEEDINGS{6070409,
  author =	 {Mendes, J.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2011 IEEE Symposium on},
  title =	 {ClassSheet-driven spreadsheet environments},
  year =	 2011,
  pages =	 {235-236},
  abstract =	 {The paper mentions that a spreadsheet business model
                  is defined from which a customized spreadsheet
                  application is generated guarantying the consistency
                  of the spreadsheet with the underlying model. This
                  approach closes the gap between creating and using a
                  domain specific language for spreadsheet models and
                  a totally different framework for actually editing
                  spreadsheet data. Instead, it unifies these
                  operations within spreadsheets: in one sheet it
                  defines the underlying model while another sheet
                  holds the actual data, such that the model and the
                  data are kept synchronized. An important feature is
                  that model evolution is available as a set of
                  pre-defined operations. Also, any evolution in a
                  spreadsheet model is automatically propagated to its
                  spreadsheet instance (that contains the underlying
                  data). ClassSheets are a high-level, object-oriented
                  formalism to specify the business logic of
                  spreadsheets. They allow users to express business
                  object structures within a spreadsheet using
                  concepts from the Unified Modeling Language (UML).},
  keywords =	 {Unified Modeling Language;business data
                  processing;object-oriented methods;spreadsheet
                  programs;ClassSheet-driven spreadsheet
                  environment;Unified Modeling Language;customized
                  spreadsheet application;domain specific
                  language;object-oriented formalism;spreadsheet
                  business logic;spreadsheet business model;Adaptation
                  models;Data models;Object oriented
                  modeling;Synchronization;USA Councils;Unified
                  modeling language;Visualization},
  doi =		 {10.1109/VLHCC.2011.6070409},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: accepted <2016-01-15 15:11:56>},
}

@INPROCEEDINGS{1287261,
  author =	 {Clermont, M.},
  booktitle =	 {Reverse Engineering, 2003. WCRE
                  2003. Proceedings. 10th Working Conference on},
  title =	 {Analyzing large spreadsheet programs},
  year =	 2003,
  pages =	 {306-315},
  abstract =	 {Not Available},
  keywords =	 {Computational modeling;Computer errors;Computer
                  languages;Flow graphs;Microcomputers;Organizational
                  aspects;Programming profession;Software
                  maintenance;Spreadsheet programs;Visualization},
  doi =		 {10.1109/WCRE.2003.1287261},
  ISSN =	 {1095-1350},
  month =	 {Nov},
  review = 	 {fbie: accepted <2016-01-15 15:11:58>},
}

@INPROCEEDINGS{6650237,
  author =	 {Ahmed, S. and Ruhi, U.},
  booktitle =	 {Informatics and Applications (ICIA),2013 Second
                  International Conference on},
  title =	 {Towards a functional taxonomy of enterprise business
                  intelligence mashups},
  year =	 2013,
  pages =	 {98-103},
  abstract =	 {Organizations today are adopting business
                  intelligence (BI) systems at a fast pace with the
                  expectation that these systems will help them make
                  better business decisions and improve their
                  performance. But with the ever changing industry
                  dynamics and variable business needs of end-users,
                  the BI requirements of organizations are also
                  getting unpredictable and increasingly harder to
                  deliver by the service providers. Additionally, the
                  advancement of web 2.0 & enterprise 2.0 technologies
                  has opened up more possibilities for the development
                  of user-centric innovative business
                  applications. Enterprise BI mashups are a specific
                  breed of such technologies that have the potential
                  to empower end-users with self-service capabilities
                  and facilitate problem-solving in ad-hoc situational
                  BI scenarios. This paper presents an overview of the
                  underlying concepts and drivers for enterprise
                  mashups in a BI context. By deliberating how
                  enterprise mashups can support the business
                  intelligence needs and requirements of organizations
                  and their end-users, we attempt to formulate a
                  taxonomy framework of BI mashups. Such a framework
                  is expected to advance an understanding of business
                  process requirements that can be satisfied through
                  the use of enterprise BI mashups, and also aid in
                  the development of mashup toolkits targeted at BI
                  end-users.},
  keywords =	 {Internet;competitive intelligence;organisational
                  aspects;user centred design;B! end-users;B!
                  requirements;Web 2.0;ad-hoc situational B!
                  scenarios;business decisions;business process
                  requirements;enterprise 2.0;enterprise B!
                  mashups;enterprise business intelligence
                  mashups;functional taxonomy;mashup
                  toolkits;organizations;problem-solving;self-service
                  capabilities;user-centric innovative business
                  applications;Bismuth;Context;Mashups;Organizations;Taxonomy;BI
                  mashups;business intelligence;end-user
                  development;enterprise 2.0;enterprise
                  mashups;self-service;web 2.0},
  doi =		 {10.1109/ICoIA.2013.6650237},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:12:00>},
}

@INPROCEEDINGS{4639079,
  author =	 {Mehandjiev, N. and Stoitsev, T. and Grebner, O. and
                  Scheidl, S. and Riss, U.},
  booktitle =	 {Visual Languages and Human-Centric Computing,
                  2008. VL/HCC 2008. IEEE Symposium on},
  title =	 {End-User Development for task management: Survey of
                  attitudes and practices},
  year =	 2008,
  pages =	 {166-174},
  abstract =	 {The willingness of non-programmers to develop or
                  modify their software depends not only on using the
                  right interfaces and programming model but also on
                  users making positive judgment about the balance of
                  benefits and costs such as learning time and
                  errors. This paper reports on a questionnaire-based
                  survey which charts this economic dimension of
                  end-user development (EUD) within the area of task
                  management. The survey explores the extent of EUD
                  practices, gauges end userpsilas perceptions of EUD
                  risks, benefits and proposed supporting actions, and
                  identifies factors which facilitate EUD practices.},
  keywords =	 {software cost estimation;task analysis;end user
                  perception;end-user development;software cost;task
                  management;Authorization;Collaborative
                  tools;Collaborative work;Companies;Computer
                  interfaces;Power generation
                  economics;Procurement;Programming
                  profession;Research and development
                  management;Software development management},
  doi =		 {10.1109/VLHCC.2008.4639079},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:12:01>},
}

@INPROCEEDINGS{4273053,
  author =	 {Scaffidi, C. and Shaw, M.},
  booktitle =	 {Economics of Software and Computation, 2007. ESC
                  '07. First International Workshop on the},
  title =	 {Toward a Calculus of Confidence},
  year =	 2007,
  pages =	 {7-7},
  abstract =	 {Programmers, and end-user programmers in particular,
                  often have difficulty evaluating software, data, and
                  communication components for reuse in new software
                  systems, which effectively reduces the value
                  programmers derive from those components. End-user
                  programmers are especially ill equipped to exercise
                  the customary high-ceremony means of evaluating
                  software quality. We seek effective ways to use
                  low-ceremony sources of evidence, such as online
                  reviews and reputation data, to make components'
                  quality attributes easier to establish, thereby
                  facilitating more effective selection of components
                  for reuse. Achieving this will require identifying
                  sources of low-ceremony evidence, designing the
                  meta-information required to track the differing
                  sources and levels of credibility of various sources
                  of evidence, and developing a method for combining
                  pieces of disparate information into overall
                  estimates of component value.},
  keywords =	 {object-oriented programming;software
                  quality;software reusability;calculus;end-user
                  programmer;low-ceremony evidence source;online
                  review;reputation data;software component;software
                  quality evaluation;software
                  reusability;Calculus;Communication system
                  software;Computer science;Documentation;Electronic
                  mail;Programming profession;Software
                  quality;Software systems;Web pages;XML},
  doi =		 {10.1109/ESC.2007.9},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:12:04>},
}

@INPROCEEDINGS{4032450,
  author =	 {Reitz, M.},
  booktitle =	 {Software Evolvability, 2006. SE '06. Second
                  International IEEE Workshop on},
  title =	 {Software Evolvability by Component-Orientation},
  year =	 2006,
  pages =	 {66-73},
  abstract =	 {Software is often in a state of flux because of
                  inaccurate or incomplete requirements at development
                  time or due to changing needs during the life
                  cycle. Component-orientation structures software
                  systems in compartments which localise the impact of
                  requirement changes, simplifying replacement of
                  subsystems if the need arises. Unfortunately,
                  current technologies focus on the initial
                  construction phase, disregarding software
                  evolvability aspects. Although the number of
                  compartments affected by requirement changes is
                  usually small, rather tight coupling between
                  components complicates and in certain circumstances
                  even prevents evolvability. This paper introduces a
                  loosely coupled component model whose communication
                  scheme is based on arbitrarily interleavable message
                  propagation scopes which define and constrain the
                  "connectedness" of software components. Inspired by
                  biological concepts, namely principles of signal
                  transmission at cell level and communication
                  mechanisms of higher order organisms, analogies
                  between biological components and software
                  components which help to increase adaptability and
                  flexibility are drawn. Finally, the model's benefits
                  within the context of COMDECO are sketched to give
                  an impression of its practical applicability},
  keywords =	 {object-oriented programming;software
                  prototyping;COMDECO;arbitrarily interleavable
                  message propagation;biological
                  inspiration;component-orientation;loosely coupled
                  component model;software components;software
                  evolvability;software systems;Biological system
                  modeling;Cells (biology);Computational
                  biology;Computer languages;Context
                  modeling;Couplings;Organisms;Process design;Software
                  design;Software systems},
  doi =		 {10.1109/SOFTWARE-EVOLVABILITY.2006.13},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:12:06>},
}

@INPROCEEDINGS{183493,
  author =	 {Brown, C.V. and Brancheau, J.C.},
  booktitle =	 {System Sciences, 1992. Proceedings of the
                  Twenty-Fifth Hawaii International Conference on},
  title =	 {A research model for managing end-user computing:
                  making sense of the past decade},
  year =	 1992,
  volume =	 {iii},
  pages =	 {269-276 vol.3},
  abstract =	 {To date no comprehensive research model for the
                  management of end-user computing (EUC) has been
                  introduced to help `make sense' of the past decade
                  of research. The paper addresses this gap in the
                  research by presenting a model for EUC management
                  studies which focuses on individual-level
                  factors. Four factors are detailed: the end user,
                  task, tool, and end-user action. To demonstrate the
                  utility of the research model, a sample of EUC
                  management studies published between 1983 and 1990
                  in major IS journals and conference proceedings is
                  discussed in terms of the main components of the
                  model. The paper concludes with an assessment of the
                  progress which has been made towards accumulating
                  knowledge about end-user computing management},
  keywords =	 {DP management;EUC management studies;end-user
                  computing management;individual-level
                  factors;research model;Computer
                  applications;Conference management;Conference
                  proceedings;Context modeling;Information
                  management;Knowledge management;Management
                  information systems;Pervasive computing;Sampling
                  methods;Technology management},
  doi =		 {10.1109/HICSS.1992.183493},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:12:09>},
}

@INPROCEEDINGS{4639097,
  author =	 {Pane, J.F. and Wiedenbeck, S.},
  booktitle =	 {Visual Languages and Human-Centric Computing,
                  2008. VL/HCC 2008. IEEE Symposium on},
  title =	 {Expanding the benefits of computational thinking to
                  diverse populations: Graduate student consortium},
  year =	 2008,
  pages =	 {253-253},
  abstract =	 {The sixth annual graduate consortium at VL/HCC
                  addresses the question: How can researchers and
                  designers of end-user development environments
                  support computational problem-solving and
                  information manipulation by diverse user
                  populations?},
  keywords =	 {computer science education;problem
                  solving;VL-HCC;computational
                  problem-solving;computational thinking;diverse user
                  populations;graduate student consortium;information
                  manipulation;Computer
                  languages;Conferences;Educational
                  programs;Feedback;Home computing;Information
                  technology;Problem-solving;Programming
                  profession;Sociology;Software},
  doi =		 {10.1109/VLHCC.2008.4639097},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:12:11>},
}

@INPROCEEDINGS{5295248,
  author =	 {Grammel, Lars},
  booktitle =	 {Visual Languages and Human-Centric Computing,
                  2009. VL/HCC 2009. IEEE Symposium on},
  title =	 {Supporting end users in analyzing multiple data
                  sources},
  year =	 2009,
  pages =	 {246-247},
  abstract =	 {The analysis of data from multiple sources promises
                  rich insights into complex phenomena. However, such
                  an analysis requires data integration, which remains
                  difficult for users without programming skills. In
                  order to enable those users to perform ad-hoc data
                  analysis of multiple data sources, we are
                  researching their cognitive support needs and
                  developing tools that provide appropriate cognitive
                  support for this task. As part of this, we are
                  exploring a widget-centric data integration and
                  analysis approach.},
  keywords =	 {cognitive systems;data analysis;ad-hoc data
                  analysis;cognitive support;multiple data
                  sources;widget-centric data integration;Cognitive
                  science;Data analysis;Data visualization;Marketing
                  and sales;Mashups;Performance
                  evaluation;Personnel;Programming
                  profession;Statistics;Visual analytics},
  doi =		 {10.1109/VLHCC.2009.5295248},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:12:18>},
}

@INPROCEEDINGS{6240760,
  author =	 {Pavlic, Z. and Lugaric, T. and Silic, M.},
  booktitle =	 {MIPRO, 2012 Proceedings of the 35th International
                  Convention},
  title =	 {Debugging in consumer-programming oriented
                  environments},
  year =	 2012,
  pages =	 {841-846},
  abstract =	 {Computer consumers are the largest group of computer
                  users, many of which are highly creative and experts
                  in their area. Despite the fact they have no formal
                  education in computer programming, they want to
                  express their creativity and develop their own
                  applications which will satisfy their
                  needs. Nowadays, consumers can build their own
                  personalized software artifacts using Geppeto
                  (Widget Parallel Programming Tool) by building
                  personalized workflows and dataflows over widgets,
                  small standalone Web applications. However, computer
                  consumers are prone to making mistakes while
                  programming, which results in bugs in their
                  applications. Consumers require assistance of
                  skilled programmers in order to build dependable and
                  error-free applications. This paper discusses new
                  debugging methods based on professional debugging
                  techniques, which will be understandable to average
                  consumer. These methods will allow consumers
                  controlled execution of their applications in order
                  to find and remove bugs. Methods described in this
                  paper are suitable for debugging consumer
                  applications in a widget-oriented consumer
                  programming environment like Geppeto, and include
                  animated step-by-step execution of the consumer's
                  application, adding breakpoints within widget
                  composition and introducing interactive backtracking
                  in order to detect erroneous widget.},
  keywords =	 {Internet;data flow computing;interactive
                  systems;parallel programming;program
                  debugging;Geppeto;Web applications;animated
                  step-by-step execution;computer consumers;computer
                  programming;consumer-programming oriented
                  environments;dataflows;erroneous widget;error-free
                  applications;interactive backtracking;personalized
                  software artifacts;personalized
                  workflows;professional debugging techniques;widget
                  parallel programming tool;widget-oriented consumer
                  programming environment;Computer
                  bugs;Computers;Debugging;Graphical user
                  interfaces;Programming;Programming
                  environments;Software},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:12:21>},
}

@INPROCEEDINGS{332835,
  author =	 {Morley, J. and Miller, R.L.},
  booktitle =	 {Aerospace and Electronics Conference, 1994. NAECON
                  1994., Proceedings of the IEEE 1994 National},
  title =	 {Tying sociology to information systems development},
  year =	 1994,
  pages =	 {845-852 vol.2},
  abstract =	 {Developing computer-based information systems has
                  always been considered a technical process,
                  traditionally under the control of the information
                  systems department. Information systems development
                  is considerably different today than it has been in
                  the past because of technological
                  change. Technological change has also brought about
                  sociological change. End users are more involved in
                  systems development than ever before, and, in some
                  cases, are undertaking the job of developing systems
                  without relying on the information systems
                  department. Users and technicians alike need to
                  understand the changing sociological roles that each
                  group is facing. Technicians, in particular, need to
                  be sensitive to the sociological aspects of systems
                  development. This paper examines the sociological
                  aspects and impacts of building information systems},
  keywords =	 {information systems;social aspects of
                  automation;software engineering;computer-based
                  information systems;information systems
                  development;sociology;Behavioral
                  science;Buildings;Control systems;Humans;Information
                  systems;Microcomputers;Natural languages;Sociology},
  doi =		 {10.1109/NAECON.1994.332835},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:12:26>},
}

@INPROCEEDINGS{6645261,
  author =	 {Chambers, C. and Scaffidi, C.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2013 IEEE Symposium on},
  title =	 {Smell-driven performance analysis for end-user
                  programmers},
  year =	 2013,
  pages =	 {159-166},
  abstract =	 {End-user programmers such as scientists and
                  engineers often adopt a visual domain-specific
                  language due to its easy learnability, but then they
                  later encounter problems when trying to create
                  high-performance programs. In response, they
                  typically have had to resort to learning and using
                  general textual languages such as C or Fortran as a
                  supplement or replacement for the visual
                  language. This paper proposes a technique, called
                  Smell-driven performance analysis, for helping
                  end-user programmers to overcome performance
                  problems without leaving the visual dataflow
                  paradigm. The technique involves statically
                  analyzing programs to heuristically detect areas
                  with potential performance problems (“bad smells”),
                  alerting enduser programmers about problems, and
                  advising on how to fix those problems. We have
                  implemented a prototype for applying this technique
                  and conducted a user study in which end-user
                  programmers diagnosed performance problems. The
                  experiment showed our technique increased
                  participants' success rates at finding problems and
                  decreased the time required for finding
                  solutions. Qualitatively, 92% of participants said
                  our technique was helpful, and they listed numerous
                  specific benefits provided.},
  keywords =	 {program diagnostics;specification languages;visual
                  languages;Fortran;end-user
                  programmers;high-performance programs;program
                  analysis;smell-driven performance analysis;textual
                  languages;visual dataflow paradigm;visual
                  domain-specific
                  language;Arrays;Detectors;Instruments;Performance
                  analysis;Prototypes;Visualization;end-user
                  programming;performance;visual language},
  doi =		 {10.1109/VLHCC.2013.6645261},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:12:36>},
}

@INPROCEEDINGS{183320,
  author =	 {Zarmer, C.L. and Nardi, B.A. and Johnson, J. and
                  Miller, J.R.},
  booktitle =	 {System Sciences, 1992. Proceedings of the
                  Twenty-Fifth Hawaii International Conference on},
  title =	 {ACE: Zen and the art of application building},
  year =	 1992,
  volume =	 {ii},
  pages =	 {687-698 vol.2},
  abstract =	 {Task-specific application development environments
                  enable end users to create their own
                  applications. This is advantageous in two ways:
                  users can draw on their own rich task knowledge to
                  create the applications they really want, and
                  reliance on the scarce, expensive expertise of
                  professional programmers is greatly
                  reduced. Extensible systems such as spreadsheets and
                  statistical packages provide a good model for
                  application construction as they allow end users to
                  create complete applications. Such environments
                  eliminate the need for separate user interface
                  builders; the interface is seamlessly created as the
                  application is developed. In this `Zen' process,
                  there is little difference between application
                  development and user interface development. Further
                  barriers are broken down by creating application
                  development components that can continually be
                  edited and refined, so that distinctions among
                  `editing', `building', `application construction',
                  and `finished application' begin to disappear. The
                  authors describe ACE, an architecture for building
                  task-specific applications, and the software
                  libraries they have developed to implement this
                  architecture. They show how ACE supports the
                  building of task-specific applications via a range
                  of extension mechanisms from interactive editing by
                  end users to programmer-defined subclassing},
  keywords =	 {graphical user interfaces;programming
                  environments;ACE;Zen;application
                  building;interactive editing;programmer-defined
                  subclassing;software
                  libraries;spreadsheets;statistical packages;task
                  specific application development
                  environment;Application software;Buildings;Milling
                  machines;Packaging;Predictive models;Programming
                  profession;Software libraries;Subspace
                  constraints;User interfaces;Workstations},
  doi =		 {10.1109/HICSS.1992.183320},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:12:40>},
}

@INPROCEEDINGS{6883027,
  author =	 {Admire, J. and Al Zawwad, A. and Almorebah, A. and
                  Karve, S. and Scaffidi, C.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2014 IEEE Symposium on},
  title =	 {Code you can use: Searching for web automation
                  scripts based on reusability},
  year =	 2014,
  pages =	 {81-88},
  abstract =	 {Web scripting enables users to automate interactions
                  with websites. Online open source repositories
                  provide scripts available for reuse. Yet just
                  because these scripts are open source does not mean
                  they are all reusable: many are specialized and
                  irrelevant to most peoples' needs, while others are
                  hard to understand or learn from. Repositories offer
                  keyword-based search engines to find scripts
                  relevant to specialized needs, but they lack any
                  means for filtering search results according to
                  reusability. To address this shortcoming, we present
                  an approach for creating a model to automatically
                  estimate the reusability of web automation
                  scripts. To test this approach, we prototyped a
                  search engine that uses these reusability estimates
                  to sort one particular kind of web automation
                  scripts, CoScripter macros, according to
                  reusability. An empirical evaluation confirmed that
                  the system's reusability estimates are significantly
                  correlated with user perceptions of macro
                  reusability, thus implying that our approach
                  presents a viable means for helping end-user
                  programmers to find reusable web automation
                  scripts.},
  keywords =	 {Web design;authoring languages;search
                  engines;software reusability;source code
                  (software);CoScripter macros;Web automation scripts
                  searching;Web scripting;Websites
                  interactions;code;end-user
                  programmers;filtering;keyword-based search
                  engines;macro reusability;online open source
                  repositories;open source scripts;system
                  reusability;user
                  perceptions;Automation;Computational modeling;Linear
                  regression;Programming;Radio access networks;Search
                  engines;Web sites;end-user
                  programming;reuse;scripting},
  doi =		 {10.1109/VLHCC.2014.6883027},
  month =	 {July},
  review = 	 {fbie: rejected <2016-01-15 15:12:43>},
}

@INPROCEEDINGS{6092563,
  author =	 {Stolee, K.T. and Elbaum, S. and Sarma, A.},
  booktitle =	 {Empirical Software Engineering and Measurement
                  (ESEM), 2011 International Symposium on},
  title =	 {End-User Programmers and their Communities: An
                  Artifact-based Analysis},
  year =	 2011,
  pages =	 {147-156},
  abstract =	 {End-user programmers outnumber professionals
                  programmers, write software that matters to an
                  increasingly large number of users, and face
                  software engineering challenges that are similar to
                  their professionals counterparts. Yet, we know
                  little about how these end-user programmers create
                  and share artifacts as part of a community. To gain
                  a better understanding of these issues, we perform
                  an artifact-based community analysis of 32,000
                  mashups from the Yahoo! Pipes repository. We
                  observed that, like with other online communities,
                  there is great deal of attrition but authors that
                  persevere tend to improve over time, creating pipes
                  that are more configurable, diverse, complex, and
                  popular. We also discovered, however, that end-user
                  programmers employ the repository in different ways
                  than professionals, do not effectively reuse
                  existing programs, and in most cases do not have an
                  awareness of the community. We discuss the
                  implications of these findings.},
  keywords =	 {software reusability;Yahoo! Pipes
                  repository;artifact based community analysis;end
                  user programmers;program reuse;software
                  engineering;Cloning;Communities;Feeds;Mashups;Measurement;artifact
                  repositories;community analysis;end-user
                  programmers},
  doi =		 {10.1109/ESEM.2011.23},
  ISSN =	 {1938-6451},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:12:52>},
}

@INPROCEEDINGS{4221650,
  author =	 {Haas, L.M. and Cousins, S.B.},
  booktitle =	 {Data Engineering, 2007. ICDE 2007. IEEE 23rd
                  International Conference on},
  title =	 {Information for People},
  year =	 2007,
  pages =	 {21-25},
  abstract =	 {Ordinary people have access to unprecedented volumes
                  of information today. Researchers in the fields of
                  information management (IM) and human-computer
                  interaction (HCI) are reacting to this challenge
                  from their own unique perspectives. Having access to
                  a billion records is cool, but having access to a
                  billion people is awesome. In this paper, we look at
                  recent research from both communities, and speculate
                  on how interactions between the communities could
                  enhance the user experience of information.},
  keywords =	 {information management;human-computer
                  interaction;information management},
  doi =		 {10.1109/ICDE.2007.367847},
  month =	 {April},
  review = 	 {fbie: rejected <2016-01-15 15:12:53>},
}

@INPROCEEDINGS{5693254,
  author =	 {Mehandjiev, N. and Lecue, F. and Wajid, U. and
                  Namoun, A.},
  booktitle =	 {Web Services (ECOWS), 2010 IEEE 8th European
                  Conference on},
  title =	 {Assisted Service Composition for End Users},
  year =	 2010,
  pages =	 {131-138},
  abstract =	 {Involving people who do not have programming
                  background in assembling and tailoring service-based
                  applications promises to open up access to the
                  creativity of millions of users. An increasing
                  number of development environments aim to do this by
                  offering drag-and-drop visual representations
                  connecting different service components into an
                  assembly. In contrast to the majority of these, we
                  did not start with the technology but with the users
                  - service producers and consumers, and studied the
                  core issues which should be resolved before people
                  who are not programmers can start to assemble
                  services into meaningful applications, over and
                  above the presentation-level integration offered by
                  current mash-up environments. The result is an
                  assisted approach to service composition for end
                  users, which uses semantic technologies to shield
                  users from the irrelevant complexity of service
                  technology and from the need to manually resolve
                  dependencies between services. The approach was
                  evaluated by a focus group of non-technical users,
                  who ranked it highly and provided valuable
                  suggestions for further improvements and supporting
                  features.},
  keywords =	 {Web services;service-oriented architecture;user
                  interfaces;drag-and-drop visual
                  representation;semantic technology;service based
                  application;service composition;service-oriented
                  computing;end user development;semantic
                  services;service assembly},
  doi =		 {10.1109/ECOWS.2010.30},
  month =	 {Dec},
  review = 	 {fbie: rejected <2016-01-15 15:12:54>},
}

@INPROCEEDINGS{6070372,
  author =	 {Jones, M. and Scaffidi, C.},
  booktitle =	 {Visual Languages and Human-Centric Computing
                  (VL/HCC), 2011 IEEE Symposium on},
  title =	 {Obstacles and opportunities with using visual and
                  domain-specific languages in scientific programming},
  year =	 2011,
  pages =	 {9-16},
  abstract =	 {Scientific discovery is the lifeblood of
                  technological progress, and end-user programming in
                  turn is increasingly essential to modern science. In
                  order to uncover opportunities to facilitate
                  scientific programming, we interviewed scientists
                  about their choice of tools and languages, as well
                  as the obstacles resulting from those choices. We
                  focused on domain-specific languages (DSLs),
                  particularly visual DSLs, because prior empirical
                  studies had not explored scientists' DSL use in
                  detail. We found that DSLs were indeed used by most
                  of these scientists, and in fact it was typical for
                  scientific projects to use an increasing number of
                  DSLs over time. Our study extended some findings
                  from related work, and it identified obstacles not
                  previously uncovered. In particular, we found that
                  scientists often struggled with managing data
                  complexity, as well as with using version control
                  systems. Our study revealed several opportunities to
                  improve DSLs and related tools, such as for helping
                  scientists to cope with data complexity and for
                  helping them to foresee problems when choosing a
                  language.},
  keywords =	 {scientific information systems;visual languages;data
                  complexity;domain-specific language;end-user
                  programming;modern science;scientific
                  computing;scientific discovery;scientific
                  programming;technological progress;version control
                  system;visual DSL;visual language;DSL;Data
                  visualization;Diseases;Meteorology;Object oriented
                  modeling;Programming profession;domain-specific
                  languages;empirical studies;scientific
                  computing;visual languages},
  doi =		 {10.1109/VLHCC.2011.6070372},
  ISSN =	 {1943-6092},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:12:56>},
}

@INPROCEEDINGS{4755815,
  author =	 {Panko, R.R.},
  booktitle =	 {System Sciences, 2009. HICSS '09. 42nd Hawaii
                  International Conference on},
  title =	 {Revising the Panko-Halverson Taxonomy of Spreadsheet
                  Risks},
  year =	 2009,
  pages =	 {1-10},
  abstract =	 {The Panko-Halverson taxonomy of spreadsheet risks
                  has been widely used since its creation in the
                  1990s. This paper revises that taxonomy. It
                  introduces new ways to count cell error rates, the
                  concepts of violations versus blameless errors,
                  mistakes, slips, and lapses, context errors, and an
                  improved discussion about risks by life cycle
                  stage.},
  keywords =	 {spreadsheet programs;Panko-Halverson
                  taxonomy;blameless error;cell error rate;life cycle
                  stage;spreadsheet risk;violation error;Error
                  analysis;Error correction;Frequency;Humans;Image
                  analysis;Inspection;Protocols;Risk
                  analysis;Taxonomy;Testing},
  doi =		 {10.1109/HICSS.2009.373},
  ISSN =	 {1530-1605},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:13:04>},
}

@INBOOK{6940568,
  author =	 {Sestoft, P.},
  booktitle =	 {Spreadsheet Implementation Technology:Basics and
                  Extensions},
  title =	 {Bibliography},
  year =	 2014,
  pages =	 328,
  abstract =	 { Spreadsheets are used daily by millions of people
                  for tasks that range from organizing a list of
                  addresses to carrying out complex economic
                  simulations. Spreadsheet programs are easy to learn
                  and convenient to use because they have a clear
                  visual model and a simple efficient underlying
                  computational model. Yet although the basic
                  spreadsheet model could be extended, improved, or
                  otherwise experimented with in many ways, there is
                  no coherently designed, reasonably efficient open
                  source spreadsheet implementation that is a suitable
                  platform for such experiments. This book fills the
                  gap, teaching users how to experiment with and
                  implement innovative spreadsheet functionality and
                  introducing two software platforms for doing
                  so. Along the way, it draws on and illustrates
                  software technologies and computer science topics
                  that range from object-oriented programming to
                  compiler technology.  Spreadsheet Implementation
                  Technology surveys a wide range of information about
                  spreads eets drawn from user experience, the
                  scientific literature, and patents. After
                  summarizing the spreadsheet computation model and
                  the most important challenges for efficient
                  recalculation, the book describes Corecalc, a core
                  implementation of essential spreadsheet
                  functionality suitable for practical experiments,
                  and Funcalc, an extension of Corecalc that allows
                  users to define their own functions without
                  extraneous programming languages or loss of
                  efficiency. It also shows the advantages of
                  automatic function specialization and offers a
                  user's manual for Funcalc. The Corecalc and Funcalc
                  software is downloadable free of charge.  },
  publisher =	 {MIT Press},
  isbn =	 9780262326537,
  url =
                  {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6940568},
  review = 	 {fbie: accepted <2016-01-15 15:13:19>},
}

@ARTICLE{410157,
  author =	 {Donnar, I.H.},
  journal =	 {Computer},
  title =	 {Photocopyright infringement},
  year =	 1995,
  volume =	 28,
  number =	 9,
  pages =	 {67-68},
  abstract =	 {Copyright protection exists in original works of
                  authorship fixed in any tangible medium of
                  expression. Copyright, however, does not extend to
                  any idea, procedure, process, system, method of
                  operation, concept, principle or discovery,
                  regardless of the form in which it is described,
                  explained, illustrated or embodied. The copyright
                  owner has the exclusive right to do or authorize any
                  of the following: reproduce the copyrighted work;
                  prepare derivative works based on the copyrighted
                  work; distribute copies of the copyrighted work to
                  the public by sale or other transfer of ownership,
                  rental, lease or lending; and perform or display the
                  copyrighted work publicly. A few exceptions or
                  limitations challenge an author's exclusive rights
                  to a work of authorship. The most notable is the
                  “fair use” exception. In addition, copyright laws
                  let libraries or archives reproduce no more than one
                  copy of a work and distribute such a copy only under
                  certain conditions},
  keywords =
                  {copyright;legislation;libraries;photocopying;archives;authorship;copy
                  distribution;copyright laws;copyright ownership
                  rights;copyright protection;fair
                  use;libraries;original
                  works;photocopying;photocopyright
                  infringement;reproduction;Audio
                  systems;Circuits;Copyright
                  protection;Ear;Graphics;Libraries;Licenses;Marine
                  vehicles;Permission;Turning},
  doi =		 {10.1109/2.410157},
  ISSN =	 {0018-9162},
  month =	 {Sep},
  review = 	 {fbie: rejected <2016-01-15 15:13:21>},
}

@INPROCEEDINGS{5350243,
  author =	 {Lincke, J. and Krahn, R. and Ingalls, D. and
                  Hirschfeld, R.},
  booktitle =	 {Creating, Connecting and Collaborating through
                  Computing, 2009. C5 '09. Seventh International
                  Conference on},
  title =	 {Lively Fabrik A Web-based End-user Programming
                  Environment},
  year =	 2009,
  pages =	 {11-19},
  abstract =	 {Lively Fabrik is a Web-based general-purpose
                  end-user programming environment. Based on the
                  Lively Kernel, Lively Fabrik extends the ideas of
                  the original Fabrik system by empowering end-users
                  to create interactive Web content entirely within
                  their Web browsers. Web applications created with
                  Lively Fabrik typically combine Web sources, data
                  manipulation, and interactive user interface
                  elements. The result can be a Mashup, but due to the
                  powerful underlaying system, any general-purpose
                  application. Connecting components with wires and
                  scripting components is all that is needed to do
                  so.},
  keywords =	 {Internet;interactive systems;online
                  front-ends;programming environments;user
                  interfaces;Fabrik system;Lively Fabrik;Lively
                  Kernel;Mashup;Web browsers;Web sources;Web-based
                  end-user programming environment;Web-based
                  general-purpose end-user programming
                  environment;data manipulation;interactive Web
                  content;interactive user interface
                  elements;Application software;Collaborative
                  software;Content management;Internet;Java;Joining
                  processes;Kernel;Mashups;Programming
                  environments;User interfaces},
  doi =		 {10.1109/C5.2009.8},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:13:28>},
}

@INPROCEEDINGS{522008,
  author =	 {Morley, J.},
  booktitle =	 {Aerospace and Electronics Conference, 1995. NAECON
                  1995., Proceedings of the IEEE 1995 National},
  title =	 {Personal computer database development and the end
                  user},
  year =	 1995,
  volume =	 2,
  pages =	 {664-671 vol.2},
  abstract =	 {Advances in personal computer hardware and software
                  technology have placed enormous computing power into
                  the hands of even the most casual users. More
                  advanced users are beginning to take advantage of
                  sophisticated PC-based database management system
                  products to develop their own databases. Many of
                  these users do not understand the importance of
                  designing sound data structures into their database
                  applications. This paper addresses the problem by
                  outlining a database construction methodology that
                  can be employed by nontechnical users. The
                  methodology focuses on easy-to-follow steps and
                  eliminates references to technical terminology that
                  may confuse the user-developer. The philosophy is
                  that users can apply these techniques to build
                  better databases without understanding terms such as
                  obligatory and non-obligatory membership class,
                  insertion, deletion and update anomalies; first,
                  second and third normal forms, and referential
                  integrity},
  keywords =	 {data structures;personal computing;relational
                  databases;systems analysis;user centred
                  design;conceptual design phase;data
                  modelling;database construction methodology;database
                  management system products;easy-to-follow steps;end
                  user computing;logical design phase;personal
                  computer database development;physical design
                  phase;relational databases;requirements
                  specification;systems development;user
                  developers;Application software;Data processing;Data
                  structures;Database
                  systems;Drives;Hardware;Information
                  systems;Microcomputers;Packaging;Terminology},
  doi =		 {10.1109/NAECON.1995.522008},
  ISSN =	 {0547-3578},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:13:31>},
}

@INPROCEEDINGS{4797461,
  author =	 {Faily, S.},
  booktitle =	 {Requirements Engineering Education and Training,
                  2008. REET '08.},
  title =	 {Towards Requirements Engineering Practice for
                  Professional End User Developers: A Case Study},
  year =	 2008,
  pages =	 {38-44},
  abstract =	 {End-user development has received a lot of attention
                  in the research community. Despite the importance of
                  requirements engineering in the software development
                  life-cycle, comparatively little exists in the way
                  of prescriptive advice or case studies on both
                  requirements engineering and end-user
                  development. This paper argues that end-user
                  developers can obtain practical benefit by adopting
                  professional requirements engineering practices. We
                  report on how these practices were fostered within a
                  workplace environment and illustrate that evaluating
                  the effectiveness of teaching such practices can
                  lead to a better understanding of the relationship
                  between end-user development and software
                  engineering in general.},
  keywords =	 {product life cycle management;software
                  engineering;systems analysis;professional end user
                  developers;requirements engineering;software
                  development life-cycle;software
                  engineering;teaching;Application
                  software;Computational modeling;Computer
                  languages;Computer
                  science;Education;Employment;Laboratories;Maintenance
                  engineering;Programming;Software engineering},
  doi =		 {10.1109/REET.2008.8},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:13:34>},
}

@INPROCEEDINGS{7105623,
  author =	 {Xiaochun Wang and Lin Zhu},
  booktitle =	 {Information Technology and Electronic Commerce
                  (ICITEC), 2014 2nd International Conference on},
  title =	 {Research on end-user programming tool for pen-based
                  e-form software},
  year =	 2014,
  pages =	 {301-305},
  abstract =	 {Pen-based e-form is the e-form software based on
                  pen-based user interface. Because of the complexity
                  of existing development tool and difficulty of
                  implementing pen-based user interface, pen-based
                  e-form only can be designed and implemented by the
                  professional developers, which make it difficult to
                  adapt to the changing user requirements. It is a
                  good method to solve the above problem to develop a
                  software programming tool which supports end users
                  to design their own software. Therefore, the paper
                  systemically searches the end-user programming tool
                  for pen-based e-form software, and details its
                  software structure and component. In the end, we
                  develop the prototype system and analyze its
                  end-user programming support degree.},
  keywords =	 {light pens;personal computing;software tools;user
                  interfaces;end-user programming tool;pen-based
                  e-form software;pen-based user interface;software
                  component;software programming tool;software
                  structure;Business;Generators;Programming
                  profession;Prototypes;Software;User interfaces;Form
                  builder;interactive design;pen-based
                  e-form;programming tool},
  doi =		 {10.1109/ICITEC.2014.7105623},
  month =	 {Dec},
  review = 	 {fbie: rejected <2016-01-15 15:13:36>},
}

@INPROCEEDINGS{6223004,
  author =	 {Pawlik, A. and Segal, J. and Petre, M.},
  booktitle =	 {Cooperative and Human Aspects of Software
                  Engineering (CHASE), 2012 5th International Workshop
                  on},
  title =	 {Documentation practices in scientific software
                  development},
  year =	 2012,
  pages =	 {113-119},
  abstract =	 {This paper focuses on documentation practices in
                  scientific software development and takes into
                  account two perspectives: that of scientists who
                  develop software (scientists-developers) and of
                  those scientists who use it. We describe
                  documentation practices of scientists-developers. We
                  also explore the role of users' community in
                  scientific software documentation. We compare our
                  findings to studies about documentation practices of
                  professional software developers and discuss how
                  production of documentation in scientific software
                  development can be supported.},
  keywords =	 {natural sciences computing;software
                  engineering;system documentation;documentation
                  practices;professional software
                  developers;scientific software
                  development;scientific software
                  documentation;scientists-developers;Communities;Documentation;Google;Interviews;Manuals;Programming;Software;documentation;empirical
                  study;end-user development;scientific software
                  development},
  doi =		 {10.1109/CHASE.2012.6223004},
  month =	 {June},
  review = 	 {fbie: rejected <2016-01-15 15:13:37>},
}

@INPROCEEDINGS{4724546,
  author =	 {Malaer, A. and Lampe, M.},
  booktitle =	 {Software Engineering Conference, 2008. APSEC
                  '08. 15th Asia-Pacific},
  title =	 {SimPL A Simple Software Production Line for End User
                  Development},
  year =	 2008,
  pages =	 {179-186},
  abstract =	 {Model-driven engineering (MDE) and product line
                  engineering (PLE) will influence the future of
                  software development and increase the automation of
                  application development. End user development (EUD)
                  is an emerging paradigm where end users create and
                  adapt systems themselves. To leverage MDE and PLE
                  for EUD in small domains, we introduce a simple
                  software production line that allows domain
                  engineers to easily set up product line member
                  instantiation environments for end users. The main
                  contribution of our work is SimPL-the production
                  line tools. SimPL consists of a graphical editor to
                  model the concrete products and a code generator to
                  produce the corresponding software, both based on a
                  single product line specification. In this paper, we
                  describe the concepts and processes incorporated in
                  SimPL and a case study of successful employment.},
  keywords =	 {formal specification;product development;program
                  compilers;software reusability;software tools;user
                  centred design;code generator;end user
                  development;graphical editor;model-driven
                  engineering;simple software production line
                  engineering;single product line
                  specification;software development;Application
                  software;Automation;Concrete;Employment;Model driven
                  engineering;Pervasive computing;Production
                  systems;Programming;Software engineering;Software
                  tools;DSL;DSML;code generation;domain-specific
                  modeling;end user development;graphical
                  editor;model-driven engineering;product line
                  engineering;software automation},
  doi =		 {10.1109/APSEC.2008.29},
  ISSN =	 {1530-1362},
  month =	 {Dec},
  review = 	 {fbie: rejected <2016-01-15 15:13:40>},
}

@INPROCEEDINGS{6062157,
  author =	 {Shonle, M. and Yuen, T.T.},
  booktitle =	 {Software Engineering, 2010 ACM/IEEE 32nd
                  International Conference on},
  title =	 {Compose #x0026; conquer: modularity for end-users},
  year =	 2010,
  volume =	 2,
  pages =	 {191-194},
  abstract =	 {Users have vast amounts of information at their
                  disposal and access to many tools that can compute
                  on that data. Often, no particular program can
                  fulfill a user's needs; or, when such a program
                  exists, it may be too obscure for the user to
                  find. When users encounter this problem, they resort
                  to ad-hoc approaches, such as importing and
                  exporting data to different file formats, as a way
                  to piece together disparate features from several
                  different programs. As a result, users end up
                  manually entering and manipulating data, defeating
                  the purpose of automatic computing machines. In this
                  paper, we introduce the concept of a Creativity
                  Engine, which is like a search engine over the
                  possible links between software libraries. A
                  Creativity Engine can be used to bring together
                  libraries that were never intended to work together,
                  in way that can bring within users' reach the almost
                  infinite flexibility their machines have to
                  transform data.},
  keywords =	 {file organisation;personal computing;software fault
                  tolerance;software libraries;software tools;ad hoc
                  approach;automatic computing machines;creativity
                  engine;data manipulation;data
                  transformation;end-user modularity;file
                  format;software
                  libraries;Animation;Engines;Libraries;Programming
                  profession;Software;USA Councils;architectural
                  mismatch;end-user programming;modularity},
  doi =		 {10.1145/1810295.1810327},
  ISSN =	 {0270-5257},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:13:43>},
}

@INPROCEEDINGS{7180088,
  author =	 {Burlet, G. and Hindle, A.},
  booktitle =	 {Mining Software Repositories (MSR), 2015 IEEE/ACM
                  12th Working Conference on},
  title =	 {An Empirical Study of End-User Programmers in the
                  Computer Music Community},
  year =	 2015,
  pages =	 {292-302},
  abstract =	 {Computer musicians are a community of end-user
                  programmers who often use visual programming
                  languages such as Max/MSP or Pure Data to realize
                  their musical compositions. This research study
                  conducts a multifaceted analysis of the software
                  development practices of computer musicians when
                  programming in these visual music-oriented
                  languages. A statistical analysis of project
                  metadata harvested from software repositories hosted
                  on GitHub reveals that in comparison to the general
                  population of software developers, computer
                  musicians' repositories have less commits, less
                  frequent commits, more commits on weekends, yet
                  similar numbers of bug reports and similar numbers
                  of contributing authors. Analysis of source code in
                  these repositories reveals that the vast majority of
                  code can be reconstructed from duplicate
                  fragments. Finally, these results are corroborated
                  by a survey of computer musicians and interviews
                  with individuals in this end-user community. Based
                  on this analysis and feedback from computer
                  musicians we find that there are many avenues where
                  software engineering can be applied to help aid this
                  community of end-user programmers.},
  keywords =	 {meta data;music;personal computing;program
                  debugging;source code (software);statistical
                  analysis;visual languages;GitHub;Max/MSP;Pure
                  Data;computer music community;computer musician
                  repositories;end-user community;end-user
                  programmers;multifaceted analysis;musical
                  compositions;project metadata;software
                  developers;software development practices;software
                  engineering;software repositories;source
                  code;statistical analysis;visual music-oriented
                  languages;visual programming
                  languages;Cloning;Communities;Computer
                  languages;Computers;Music;Software;Visualization;computer
                  music;end user;visual programming},
  doi =		 {10.1109/MSR.2015.34},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:13:45>},
}

@INPROCEEDINGS{6976536,
  author =	 {Shiohara, K. and Xing Chen},
  booktitle =	 {Advanced Research and Technology in Industry
                  Applications (WARTIA), 2014 IEEE Workshop on},
  title =	 {A concept of extending spreadsheet cell functions
                  for Web application development based on a cloud
                  platform},
  year =	 2014,
  pages =	 {1362-1365},
  abstract =	 {Web application development is confronted with
                  increasing system complexity, new technical
                  specification requirements, progressive changing of
                  client terminal devices and security problems
                  triggered by new cracking techniques. In this
                  context, providing new methods for effectively
                  developing Web application in low cost becomes
                  paramount. This brings new technical challenges of
                  developing new data modeling and new techniques in
                  data structure, database schema, page transition
                  control, authorization, session management,
                  programming, and input and output interface design
                  technical areas, as Web application development
                  requires all of those techniques. At the same time,
                  as the remarkable progress of information and
                  communication technology (ICT) has been made, ICT
                  technologies are bring dramatic changes to our lives
                  and business. Thus, there is an increasing need for
                  developing Web applications for business and
                  everyday life utilization. Building on previous
                  research and applications, this paper presents that
                  data models for developing Web applications can be
                  built using spreadsheets based on a cloud
                  application development platform, called
                  FOCAPLAS. This spreadsheet based developing approach
                  presents our challenges on new methodologies of both
                  the data modeling and programming for Web
                  application development.},
  keywords =	 {Internet;authorisation;cloud computing;data
                  structures;spreadsheet programs;FOCAPLAS;ICT
                  technology;Web application
                  development;authorization;client terminal devices
                  progressive changing;cloud platform;cracking
                  technique;data modeling;data structure;database
                  schema;information and communication
                  technology;input and output interface design
                  technical areas;page transition
                  control;programming;session management;spreadsheet
                  cell functions;technical specification
                  requirements;Business;Cloud
                  computing;Conferences;Data
                  models;Databases;Programming;Servers;Web application
                  development;cloud computing;data
                  modeling;platform;spreadsheet},
  doi =		 {10.1109/WARTIA.2014.6976536},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:13:49>},
}

@INPROCEEDINGS{5328408,
  author =	 {Da Silva, B.S. and Barbosa, S.D.J.},
  booktitle =	 {Software Engineering Workshop, 2008. SEW '08. 32nd
                  Annual IEEE},
  title =	 {Variability Analysis: From Requirements Engineering
                  Towards Interaction Design},
  year =	 2008,
  pages =	 {97-107},
  abstract =	 {Much research has been devoted to adaptable and
                  adaptive systems over a decade, with the aim to
                  improve user-system interaction. Despite these
                  efforts, we still lack a systematic approach to deal
                  with variations in users, user goals, and contexts
                  of use. In this paper, we revise some previous work
                  on a language-based variability analysis process,
                  propose a structure for the solution space of
                  adaptable and adaptive systems, and illustrate how
                  design decisions on how to cope with variability can
                  be made in this approach.},
  keywords =	 {human computer interaction;systems
                  analysis;adaptable systems;adaptive
                  systems;interaction design;requirements
                  engineering;user-system interaction;variability
                  analysis;Adaptive systems;Application
                  software;Conferences;Design engineering;Desktop
                  publishing;Focusing;Human computer
                  interaction;Production systems;System analysis and
                  design;User interfaces;adaptation;case
                  grammar;interaction design;requirements
                  engineering;variability analysis},
  doi =		 {10.1109/SEW.2008.21},
  ISSN =	 {1550-6215},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:13:53>},
}

@INPROCEEDINGS{5071696,
  author =	 {Burnett, M. and Bogart, C. and Cao, J. and
                  Grigoreanu, V. and Kulesza, T. and Lawrance, J.},
  booktitle =	 {Software Engineering Foundations for End User
                  Programming, 2009. SEEUP '09. ICSE Workshop on},
  title =	 {End-user software engineering and distributed
                  cognition},
  year =	 2009,
  pages =	 {1-7},
  abstract =	 {End-user programmers may not be aware of many
                  software engineering practices that would add
                  greater discipline to their efforts, and even if
                  they are aware of them, these practices may seem too
                  costly (in terms of time) to use. Without taking
                  advantage of at least some of these practices, the
                  software these end users create seems likely to
                  continue to be less reliable than it could be. We
                  are working on several ways of lowering both the
                  perceived and actual costs of systematic software
                  engineering practices, and on making their benefits
                  more visible and immediate. Our approach is to
                  leverage the user's cognitive effort through the use
                  of distributed cognition, in which the system and
                  user collaboratively work systematically to reason
                  about the program the end user is creating. This
                  paper demonstrates this concept with a few of our
                  past efforts, and then presents three of our current
                  efforts in this direction.},
  keywords =	 {groupware;reasoning about programs;software
                  engineering;collaborative work;distributed
                  cognition;end-user software
                  engineering;reasoning-about-program;systematic
                  software engineering
                  practice;Cognition;Collaborative
                  software;Collaborative work;Costs;Intersymbol
                  interference;Performance analysis;Programming
                  profession;Software engineering;Software
                  testing;System testing},
  doi =		 {10.1109/SEEUP.2009.5071696},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:13:54>},
}

@INPROCEEDINGS{6226577,
  author =	 {Cunha, J. and Fernandes, J.P. and Mendes, J. and
                  Saraiva, J.},
  booktitle =	 {User Evaluation for Software Engineering Researchers
                  (USER), 2012},
  title =	 {Towards an evaluation of bidirectional model-driven
                  spreadsheets},
  year =	 2012,
  pages =	 {25-28},
  abstract =	 {Spreadsheets are widely recognized as popular
                  programming systems with a huge number of
                  spreadsheets being created every day. Also,
                  spreadsheets are often used in the decision
                  processes of profit-oriented companies. While this
                  illustrates their practical importance, studies have
                  shown that up to 90% of real-world spreadsheets
                  contain errors.},
  keywords =	 {decision making;personal
                  computing;profitability;software
                  engineering;spreadsheet
                  programs;artifact;bidirectional model driven
                  spreadsheet;decision process;productivity
                  improvement;profit oriented company;programming
                  system;software engineering;spreadsheet
                  development;spreadsheet end user;Concrete;Data
                  models;Object oriented
                  modeling;Productivity;Software
                  engineering;Tutorials;Visualization;Bidirectional
                  Transformations;Embedded DSLs;Model
                  Inference;Model-Driven Engineering;Software
                  Evolution;Spreadsheets},
  doi =		 {10.1109/USER.2012.6226577},
  month =	 {June},
  review = 	 {fbie: accepted <2016-01-15 15:13:59>},
}

@INPROCEEDINGS{6080821,
  author =	 {Correia, J.P. and Ferreira, M.A.},
  booktitle =	 {Software Maintenance (ICSM), 2011 27th IEEE
                  International Conference on},
  title =	 {Measuring maintainability of spreadsheets in the
                  wild},
  year =	 2011,
  pages =	 {516-519},
  abstract =	 {Several studies have shown how spreadsheets are
                  pervasive in many organizations as a form of
                  end-user programming. Despite their importance and
                  long lifespan, they are seldom developed with
                  maintenance concerns in mind, and organizations have
                  no efficient way of estimating the risk they
                  present. In this paper we take a first step towards
                  automated assessment of spreadsheet
                  maintainability. We use the Goal Question Metric
                  approach to select metrics relevant for
                  maintainability and apply the selected metrics to a
                  spreadsheet corpus in order to study their behavior
                  "in the wild". We observe that the majority of the
                  metrics behave in the same way as similar ones for
                  traditional software systems, which means that
                  existing methodologies to assess maintainability can
                  be applied to spreadsheets as well. This opens the
                  possibility of creating instruments for
                  organizations that rely on spreadsheets to start
                  actively managing their maintainability.},
  keywords =	 {personal computing;software maintenance;spreadsheet
                  programs;end-user programming;goal question
                  metric;organization;spreadsheet corpus;spreadsheet
                  maintainability;ISO
                  standards;Measurement;Organizations;Reliability;Software
                  systems;Spreadsheet programs},
  doi =		 {10.1109/ICSM.2011.6080821},
  ISSN =	 {1063-6773},
  month =	 {Sept},
  review = 	 {fbie: accepted <2016-01-15 15:14:03>},
}

@INPROCEEDINGS{7011143,
  author =	 {Moumoutzis, N. and Christoulakis, M. and Pitsiladis,
                  A. and Sifakis, G. and Maragkoudakis, G. and
                  Christodoulakis, S.},
  booktitle =	 {Interactive Mobile Communication Technologies and
                  Learning (IMCL), 2014 International Conference on},
  title =	 {The ALICE experience: A learning framework to
                  promote gaming literacy for educators and its
                  refinement},
  year =	 2014,
  pages =	 {257-261},
  abstract =	 {Educators are facing the challenge to use the
                  learning potential of games from several
                  complementary objectives. Above all, they need to
                  develop their own competencies and critical thinking
                  on games. The overarching framework for a fruitful
                  answer to this challenge could be structured around
                  a particular type of literacy, the so-called gaming
                  literacy. This new type of literacy seeks to provide
                  a firm ground for cultivating a new type of thinking
                  about the world that is more close to the children's
                  way of thinking: “What does the world look like from
                  the point of view of gaming?” To enable educators
                  effectively move towards this direction, it is
                  important to formalize the professional knowledge
                  and skills they need to develop, offer new learning
                  opportunities for them (either pre-service or
                  in-service) and build communities of practice within
                  which they could exchange their experiences and
                  continue their professional development. We present
                  our work towards this direction, the underlying
                  learning framework, its initial conception, the
                  first pilot implementation and directions of further
                  developments focusing on mobile games.},
  keywords =	 {computer games;mobile learning;ALICE
                  experience;educators;gaming literacy
                  promotion;learning framework;mobile
                  games;overarching framework;professional knowledge
                  formalization;skill
                  formalization;Communities;Context;Educational
                  institutions;Games;Mobile
                  communication;Training;end-user development;game
                  design;gaming literacy},
  doi =		 {10.1109/IMCTL.2014.7011143},
  month =	 {Nov},
  review = 	 {fbie: rejected <2016-01-15 15:14:06>},
}

@INPROCEEDINGS{7377287,
  author =	 {Negametzyanov, Amir and Lau, Sian Lun and Ng, Chin
                  Fei},
  booktitle =	 {Open Systems (ICOS), 2015 IEEE Confernece on},
  title =	 {Web-based Interactive Form Generator for public
                  Kiosks},
  year =	 2015,
  pages =	 {108-113},
  abstract =	 {Self-service Kiosks are found in many public areas
                  such as banks, retail offices, hospitals etc. The
                  creation and deployment of forms for a kiosk usually
                  requires programming and this is a task performed by
                  programmers with technical know-how. This paper
                  presents Web-based Interactive Form Generator
                  (WebIFGen), a prototype system. WebIFGen is a
                  web-based system that allows creation and deployment
                  of forms without any technical know-how. This is
                  achieved by abstracting essential components and
                  processed identified from common kiosk systems. The
                  paper elaborates the design and implementation of
                  the system and discusses on the lesson learned.},
  keywords =	 {Conferences;Generators;Google;Open
                  systems;Programming;Prototypes;Visualization},
  doi =		 {10.1109/ICOS.2015.7377287},
  month =	 {Aug},
  review = 	 {fbie: rejected <2016-01-15 15:14:07>},
}

@INPROCEEDINGS{4351347,
  author =	 {Rosson, M.B. and Sinha, H. and Bhattacharya, M. and
                  Dejin Zhao},
  booktitle =	 {Visual Languages and Human-Centric Computing,
                  2007. VL/HCC 2007. IEEE Symposium on},
  title =	 {Design Planning in End-User Web Development},
  year =	 2007,
  pages =	 {189-196},
  abstract =	 {We report an exploratory study of the impacts of
                  design planning on end users asked to develop a
                  simple interactive web application. Some
                  participants were asked to create a conceptual map
                  to plan their projects and others to write
                  scenarios; a third group was asked to do whatever
                  they found useful. We describe the planning that
                  each group underwent, how they approached the web
                  development task, and their reactions to the
                  experience afterwards. We also discuss how
                  participants' gender and experience was related to
                  their web development activities.},
  keywords =	 {Web design;human factors;interactive
                  systems;end-user Web development;interactive Web
                  application design planning;Application
                  software;Computer architecture;Databases;Joining
                  processes;Process design;Production;Programming
                  profession;Software design;Software
                  engineering;Software testing},
  doi =		 {10.1109/VLHCC.2007.45},
  month =	 {Sept},
  review = 	 {fbie: rejected <2016-01-15 15:14:09>},
}

@INPROCEEDINGS{6274174,
  author =	 {Minhas, S.S. and Sampaio, P. and Mehandjiev, N.},
  booktitle =	 {Services Computing (SCC), 2012 IEEE Ninth
                  International Conference on},
  title =	 {A Framework for the Evaluation of Mashup Tools},
  year =	 2012,
  pages =	 {431-438},
  abstract =	 {Mashup Programming is one of the latest trends in
                  web application development. However, different
                  sources still regard that mashup technology is in
                  its infancy despite the mushroom growth of
                  mashup-based applications and technologies. This
                  calls for an in depth analysis of the support
                  available to end users for mashup development. In
                  this paper, we propose a multi-dimensional framework
                  to evaluate existing mashup tools and platforms. The
                  main idea behind this evaluation is to study the
                  state of the art of mashup development from the
                  end-user perspective and critically evaluate the
                  efforts in this regard against a set of criteria to
                  identify the research directions in this field. The
                  idea of evaluation of mashup tools has been tackled
                  through different approaches in past, however, in
                  this research we attempt to synthesize additional
                  concepts regarding mashup development and analyse
                  this area against previously ignored factors, such
                  as support for capturing users' requirements and
                  users' goals. This study also includes platforms
                  that have not yet been covered by previous
                  evaluation studies. The framework presented in this
                  study can be used as a guideline to inform future
                  design of mashup development environments for both
                  academic and industrial research. The results of the
                  study reinforce the need of a more user-oriented
                  approach to deal with the inherent issues of
                  end-user mashup programming. The study concludes
                  with the proposal of use of goals as a guiding
                  mechanism to derive the mashup applications.},
  keywords =	 {Internet;personal computing;Web application
                  development;end-user perspective;mashup development
                  environments;mashup programming;mashup tools
                  evaluation;mashup-based
                  applications;multidimensional
                  framework;Business;Educational
                  institutions;Mashups;Programming;Protocols;Usability;End-User
                  Development;Mashup Programming;Mashup Tools
                  Evaluation},
  doi =		 {10.1109/SCC.2012.19},
  month =	 {June},
  review = 	 {fbie: rejected <2016-01-15 15:14:10>},
}

@INPROCEEDINGS{290805,
  author =	 {Miller, R.L. and Morley, J. and Raikos, P.J.},
  booktitle =	 {Aerospace and Electronics Conference, 1993. NAECON
                  1993., Proceedings of the IEEE 1993 National},
  title =	 {Enterprise modeling: user-driven requirements
                  analysis},
  year =	 1993,
  pages =	 {1010-1016 vol.2},
  abstract =	 {This paper examines the traditional requirements
                  analysis determination model and discusses some of
                  its shortcomings. General principles of systems
                  analysis are discussed and an alternate method of
                  identifying and describing functional user systems
                  requirements is described. The alternate method
                  requires extensive user participation with minimal
                  input from data processing technicians in an
                  approach that enhances effectiveness of the process
                  by focusing on the user's view of his needs rather
                  then the systems analyst interpretation of them},
  keywords =	 {military computing;systems analysis;user
                  interfaces;end user computing;enterprise
                  modelling;systems analysis;user
                  participation;user-driven requirements
                  analysis;Computer applications;Computer errors;Data
                  processing;Drives;Error
                  correction;Hardware;Information analysis;Information
                  systems;Performance analysis;Seminars},
  doi =		 {10.1109/NAECON.1993.290805},
  month =	 {May},
  review = 	 {fbie: rejected <2016-01-15 15:14:11>},
}

@INPROCEEDINGS{6578291,
  author =	 {Hamzabegovic, J. and Kalpic, D.},
  booktitle =	 {Telecommunications (ConTEL), 2013 12th International
                  Conference on},
  title =	 {A proposal for development of software to support
                  specific learning difficulties},
  year =	 2013,
  pages =	 {207-214},
  abstract =	 {Among the plenty of educational software,
                  therapeutic software for dyslexia is not so
                  abundant. The paper considers two different
                  approaches to development of software for supporting
                  specific learning difficulties. One could be
                  offering of visual end user programming tools to
                  speech and language pathologists so that they could
                  develop specific software applications customized
                  for their patients. The other approach could be the
                  engagement of students majoring in educational
                  sciences who are studying informatics as their
                  secondary discipline to develop applications. Paper
                  presents concept of end user development environment
                  aimed for speech and language pathologistsas well as
                  educational pilot-applications developed by the
                  students.},
  keywords =	 {computer aided instruction;handicapped
                  aids;linguistics;medical disorders;patient
                  rehabilitation;user centred design;application
                  development;dyslexia;educational
                  pilot-applications;educational science;educational
                  software;end user development
                  environment;informatics;language
                  pathology;patient;software application;software
                  development;specific learning difficulty
                  support;speech pathology;therapeutic software;visual
                  end user programming tools;Educational
                  institutions;Games;Programming
                  profession;Software;Speech;Visualization;dyslexia;end-user
                  programming;speech and language
                  pathologists;therapeutic software},
  month =	 {June},
  review = 	 {fbie: rejected <2016-01-15 15:14:13>},
}

@INPROCEEDINGS{1260197,
  author =	 {Prabhakararao, S. and Cook, C. and Ruthruff, J. and
                  Creswick, E. and Main, M. and Durham, M. and
                  Burnett, M.},
  booktitle =	 {Human Centric Computing Languages and Environments,
                  2003. Proceedings. 2003 IEEE Symposium on},
  title =	 {Strategies and behaviors of end-user programmers
                  with interactive fault localization},
  year =	 2003,
  pages =	 {15-22},
  abstract =	 {End-user programmers are writing an unprecedented
                  number of programs, due in large part to the
                  significant effort put forth to bring programming
                  power to end users. Unfortunately, this effort has
                  not been supplemented by a comparable effort to
                  increase the correctness of these often faulty
                  programs. To address this need, we have been working
                  towards bringing fault localization techniques to
                  end users. In order to understand how end users are
                  affected by and interact with such techniques, we
                  conducted a think-aloud study, examining the
                  interactive, human-centric ties between end-user
                  debugging and a fault localization technique. Our
                  results provide insights into the contributions such
                  techniques can make to an interactive end-user
                  debugging process.},
  keywords =	 {interactive programming;program debugging;end-user
                  debugging;end-user programmers;interactive fault
                  localization;interactive human-centric
                  ties;think-aloud study;Authoring
                  systems;Debugging;Electronic
                  mail;Explosives;Feedback;Multimedia
                  systems;Programming profession;Software
                  engineering;Testing;Writing},
  doi =		 {10.1109/HCC.2003.1260197},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:14:16>},
}

@INPROCEEDINGS{926738,
  author =	 {Panko, R.R.},
  booktitle =	 {System Sciences, 2000. Proceedings of the 33rd
                  Annual Hawaii International Conference on},
  title =	 {Two corpuses of spreadsheet errors},
  year =	 2000,
  pages =	 {8 pp. vol.1-},
  abstract =	 {The widespread presence of errors in spreadsheets is
                  now well-established. Quite a few methodological and
                  software approaches have been suggested as ways to
                  reduce spreadsheet errors. However, these approaches
                  are always tailored to particular types of
                  errors. Are such errors, in fact, widespread? A tool
                  that focuses on rare errors is not very
                  appealing. In other fields of error analysis,
                  especially linguistics, it has proven useful to
                  collect corpora (systematic samples) of errors. This
                  paper presents two corpora of errors seen in
                  spreadsheet experiments. Hopefully, these corpora
                  will help us assess the claims of spreadsheet
                  reduction approaches and should guide theory
                  creation and testing.},
  keywords =	 {coding errors;error analysis;program
                  diagnostics;spreadsheet programs;error
                  analysis;spreadsheet error corpora;spreadsheet
                  reduction;systematic samples;theory creation;theory
                  testing;Computer errors;Electrical capacitance
                  tomography;Error
                  analysis;Ethics;Feedback;Humans;Investments;Tail;Tellurium;Writing},
  doi =		 {10.1109/HICSS.2000.926738},
  month =	 {Jan},
  review = 	 {fbie: accepted <2016-01-15 15:14:32>},
}

@ARTICLE{4342791,
  author =	 {Costabile, M.F. and Fogli, D. and Mussio, P. and
                  Piccinno, A.},
  journal =	 {Systems, Man and Cybernetics, Part A: Systems and
                  Humans, IEEE Transactions on},
  title =	 {Visual Interactive Systems for End-User Development:
                  A Model-Based Design Methodology},
  year =	 2007,
  volume =	 37,
  number =	 6,
  pages =	 {1029-1046},
  abstract =	 {This paper is about the development of systems whose
                  end users are professional people working in a
                  specific domain (e.g., medicine, geology, mechanical
                  engineering); they are expert in that domain, but
                  not necessarily expert in nor even conversant with
                  computer science. In several work organizations, end
                  users need to tailor their software systems to
                  better adapt them to their requirements and even to
                  create or modify software artifacts. These are
                  end-user development activities and are the focus of
                  this paper. A model of the interaction between users
                  and systems, which also takes into account their
                  reciprocal coevolution during system usage, is
                  discussed. This model is used to define a
                  methodology aimed at designing software environments
                  that allow end users to become designers of their
                  own tools. The methodology is illustrated by
                  discussing two experimental cases.},
  keywords =	 {interactive systems;user centred design;user
                  interfaces;end-user development;model-based
                  design;software artifacts;software environment
                  design;visual interactive systems;Computer
                  science;Design
                  methodology;Geology;Humans;Interactive
                  systems;Mechanical engineering;Software
                  design;Software systems;Software tools;User centered
                  design;Design methodology;user interface human
                  factors;user-centered design;visual languages},
  doi =		 {10.1109/TSMCA.2007.904776},
  ISSN =	 {1083-4427},
  month =	 {Nov},
  review = 	 {fbie: rejected <2016-01-15 15:14:37>},
}

@INPROCEEDINGS{1046334,
  author =	 {Blackwell, A.F.},
  booktitle =	 {Human Centric Computing Languages and Environments,
                  2002. Proceedings. IEEE 2002 Symposia on},
  title =	 {First steps in programming: a rationale for
                  attention investment models},
  year =	 2002,
  pages =	 {2-10},
  abstract =	 {Research into the cognitive aspects of programming
                  originated in the study of professional programmers
                  (whether experts or students). Even "end-user"
                  programmers in previous studies have often worked in
                  organizations where programming is recognized to be
                  demanding professional work-the term "power-user"
                  recognizes this technical kudos. But as personal
                  computers become widespread, and most new domestic
                  appliances incorporate microprocessors, many people
                  are engaging in programming-like activities in
                  domestic or nonprofessional contexts. Such users
                  often have less motivation and more obstacles to
                  programming, meaning that they may be unlikely even
                  to take the first steps. This paper analyses the
                  generic nature of those first steps, and identifies
                  the cognitive demands that characterize them. On the
                  basis of this analysis the paper proposes the
                  attention investment model, a cognitive model of
                  programming that offers a consistent account of all
                  programming behaviour, from professionals to
                  end-users.},
  keywords =	 {programming;psychology;attention investment
                  models;cognitive aspects;cognitive
                  model;end-users;personal computers;professional
                  programmers;programming;Books;Electronic switching
                  systems;Humans;Investments;Laboratories;Mathematical
                  programming;Microcomputers;Microprocessors;Programming
                  profession;Psychology},
  doi =		 {10.1109/HCC.2002.1046334},
  review = 	 {fbie: rejected <2016-01-15 15:14:39>},
}

@INPROCEEDINGS{6405589,
  author =	 {Xiaochun Wang and Lin Zhu and Dianhua Yang and
                  Haiguang Fang},
  booktitle =	 {Computational Intelligence and Design (ISCID), 2012
                  Fifth International Symposium on},
  title =	 {Design and Implementation on Pen-Based E-Form
                  Development Tool for End-User},
  year =	 2012,
  volume =	 2,
  pages =	 {151-154},
  abstract =	 {Pen-based e-form is a style of office software in
                  the era of Post-WIMP interface. It is complicate and
                  difficult to utilize the existing development tool
                  to implement pen-based user interface, so that
                  pen-based e-form only can be designed and
                  implemented by the professional developers, which
                  make it is difficult for the pen-based e-form
                  software to adapt to the changing user
                  requirements. Given the end-user the ability for
                  developing pen-based e-form independently is a good
                  way to solve this problem. Based on the natural
                  characteristics of the e-form and business rule, and
                  aiming at help end user develop pen-based e-form,
                  the paper systemically researches the design and
                  implementation of the pen-based e-form development
                  tool, and describes the major components of the
                  tool. Finally, we introduce the implementation of
                  the end-user development tools, and offer an example
                  about pen-based e-form software development.},
  keywords =	 {personal computing;software engineering;user
                  interfaces;business rule;end-user development
                  tools;office software;pen-based e-form development
                  tool;pen-based e-form software development;pen-based
                  user interface;post-WIMP interface;Business;Data
                  models;Educational institutions;Programming
                  profession;Software;User interfaces;End user
                  programming;e-form;end user development
                  tool;pen-based user interface},
  doi =		 {10.1109/ISCID.2012.190},
  month =	 {Oct},
  review = 	 {fbie: rejected <2016-01-15 15:14:41>},
}

@INPROCEEDINGS{495419,
  author =	 {Panko, R.R.},
  booktitle =	 {System Sciences, 1996., Proceedings of the
                  Twenty-Ninth Hawaii International Conference on ,},
  title =	 {Hitting the wall: errors in developing and debugging
                  a ldquo;simple rdquo; spreadsheet model},
  year =	 1996,
  volume =	 2,
  pages =	 {356-363 vol.2},
  abstract =	 {Undergraduate MIS business students developed and
                  debugged a spreadsheet model from a word
                  problem. This model consisted of a bid to build a
                  wall. The problem was designed to be relatively
                  simple and domain-free to address the concern that
                  past spreadsheet experiments may have used problems
                  that were too difficult or that required domain
                  knowledge that subjects did not have. During the
                  development phase, 72 subjects created the
                  spreadsheet model. Even with this rather simple
                  problem, 38% of the models contained an error. This
                  high number of incorrect spreadsheets was not due to
                  subjects making many errors. They only made 0.4
                  errors per spreadsheet. In addition, their cell
                  error rate (CER) was only 1.7%, meaning that only
                  1.7% of their cells contained errors. Unfortunately,
                  spreadsheets tend to have long cascades of cells
                  leading to the bottom line. This means that even
                  tiny cell error rates will multiply into high rates
                  of bottom-line errors. In a debugging phase,
                  subjects tried to debug their own models. Of 19
                  subjects with incorrect models who did the debugging
                  part of the experiment, only three (16%) found and
                  corrected their errors. So even with a relatively
                  simple model, development and debugging were
                  problematic. This is a fewer rate of finding errors
                  than (Galletta et al., 1993; 1996) found when
                  subjects debugged models created by the
                  experimenter. This may mean that people are not as
                  good at debugging their own models as they are at
                  debugging models created by others},
  keywords =	 {computer science education;error handling;program
                  debugging;spreadsheet programs;bottom-line
                  errors;cell error
                  rate;debugging;experiment;management information
                  system students;spreadsheet model;undergraduate
                  business students;word problem;Debugging;Error
                  analysis;Error correction;Inspection;Marketing and
                  sales;Probes},
  doi =		 {10.1109/HICSS.1996.495419},
  month =	 {Jan},
  review = 	 {fbie: rejected <2016-01-15 15:14:53>},
}

@INPROCEEDINGS{1553556,
  author =	 {Erwig, M. and Abraham, R. and Cooperstein, I. and
                  Kollmansberger, S.},
  booktitle =	 {Software Engineering, 2005. ICSE
                  2005. Proceedings. 27th International Conference on},
  title =	 {Automatic generation and maintenance of correct
                  spreadsheets},
  year =	 2005,
  pages =	 {136-145},
  abstract =	 {Existing spreadsheet systems allow users to change
                  cells arbitrarily, which is a major source of
                  spreadsheet errors. We propose a system that
                  prevents errors in spreadsheets by restricting
                  spreadsheet updates to only those that are logically
                  and technically correct. The system is based on the
                  concept of templates that describe the principal
                  structure of the initial spreadsheet and all of its
                  future versions. We have developed a program
                  generator that translates a template into an initial
                  spreadsheet together with customized update
                  operations for changing cells and inserting/deleting
                  rows and columns for this particular template. We
                  have designed a type system for templates that
                  ensures the following form of "spreadsheet
                  maintenance safety": Update operations that are
                  generated from a type-correct template are proved to
                  transform the spreadsheet only according to the
                  template and to never produce any omission,
                  reference, or type errors. Finally, we have
                  developed a prototype as an extension to Excel,
                  which has been shown by a preliminary usability
                  study to be well accepted by end users.},
  keywords =	 {automatic programming;software
                  maintenance;spreadsheet programs;Excel;automatic
                  spreadsheet generation;automatic spreadsheet
                  maintenance;end-user software engineering;program
                  generation;spreadsheet maintenance safety;type
                  system;Automatic programming;Computer errors;Error
                  correction;Permission;Prototypes;Safety;Software
                  engineering;Software prototyping;Testing;Usability},
  doi =		 {10.1109/ICSE.2005.1553556},
  month =	 {May},
  review = 	 {fbie: accepted <2016-01-15 15:14:57>},
}
